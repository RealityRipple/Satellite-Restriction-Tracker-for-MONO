
// This file has been generated by the GUI designer. Do not modify.
namespace RestrictionTrackerGTK
{
	public partial class dlgConfig
	{
		private global::Gtk.Table pnlConfigFields;
		private global::Gtk.CheckButton chkBeta;
		private global::Gtk.CheckButton chkOverAlert;
		private global::Gtk.CheckButton chkScaleScreen;
		private global::Gtk.ComboBoxEntry cmbProvider;
		private global::Gtk.Button cmdAlertStyle;
		private global::Gtk.Button cmdColors;
		private global::Gtk.EventBox evnSRT;
		private global::Gtk.Image pctSRT;
		private global::Gtk.Frame gbProxy;
		private global::Gtk.Alignment alignProxy;
		private global::Gtk.Table pnlProxy;
		private global::Gtk.ComboBox cmbProxyType;
		private global::Gtk.Label lblProxyAddr;
		private global::Gtk.Label lblProxyDomain;
		private global::Gtk.Label lblProxyPassword;
		private global::Gtk.Label lblProxyPort;
		private global::Gtk.Label lblProxyType;
		private global::Gtk.Label lblProxyUser;
		private global::Gtk.Entry txtProxyAddress;
		private global::Gtk.Entry txtProxyDomain;
		private global::Gtk.Entry txtProxyPassword;
		private global::Gtk.SpinButton txtProxyPort;
		private global::Gtk.Entry txtProxyUser;
		private global::Gtk.Label lblProxy;
		private global::Gtk.HBox hbox1;
		private global::Gtk.Label lblProtocolSSL;
		private global::Gtk.CheckButton chkProtocolSSL;
		private global::Gtk.Label lblAccount;
		private global::Gtk.Label lblAccuracy;
		private global::Gtk.Label lblHistoryDir;
		private global::Gtk.Label lblInterval;
		private global::Gtk.Label lblKey;
		private global::Gtk.Label lblPassword;
		private global::Gtk.Label lblProvider;
		private global::Gtk.Label lblPurchaseKey;
		private global::Gtk.Label lblTimeout;
		private global::Gtk.HBox pnlAccuracy;
		private global::Gtk.SpinButton txtAccuracy;
		private global::Gtk.Label lblAccuracyScale;
		private global::Gtk.HBox pnlInterval;
		private global::Gtk.SpinButton txtInterval;
		private global::Gtk.Label lblIntervalScale;
		private global::Gtk.HBox pnlKey;
		private global::Gtk.Entry txtKey1;
		private global::Gtk.Entry txtKey2;
		private global::Gtk.Entry txtKey3;
		private global::Gtk.Entry txtKey4;
		private global::Gtk.Entry txtKey5;
		private global::Gtk.EventBox evnKeyState;
		private global::Gtk.Image pctKeyState;
		private global::Gtk.HBox pnlOverAlert;
		private global::Gtk.SpinButton txtOverSize;
		private global::Gtk.Label lblOverSize;
		private global::Gtk.SpinButton txtOverTime;
		private global::Gtk.Label lblOverTime;
		private global::Gtk.HBox pnlPassword;
		private global::Gtk.Entry txtPassword;
		private global::Gtk.ToggleButton cmdPassDisplay;
		private global::Gtk.HBox pnlTimeout;
		private global::Gtk.SpinButton txtTimeout;
		private global::Gtk.Label lblTimeoutScale;
		private global::Gtk.Entry txtAccount;
		private global::Gtk.FileChooserButton txtHistoryDir;
		private global::Gtk.Button cmdSave;
		private global::Gtk.Button cmdClose;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget RestrictionTrackerGTK.dlgConfig
			this.Name = "RestrictionTrackerGTK.dlgConfig";
			this.Title = global::Mono.Unix.Catalog.GetString ("Satellite Restriction Tracker Configuration");
			this.Icon = global::Gdk.Pixbuf.LoadFromResource ("RestrictionTrackerGTK.Resources.norm.ico");
			this.TypeHint = ((global::Gdk.WindowTypeHint)(1));
			this.WindowPosition = ((global::Gtk.WindowPosition)(1));
			this.Modal = true;
			this.Resizable = false;
			this.AllowGrow = false;
			this.SkipPagerHint = true;
			this.SkipTaskbarHint = true;
			// Internal child RestrictionTrackerGTK.dlgConfig.VBox
			global::Gtk.VBox w1 = this.VBox;
			w1.Name = "pnlDialog";
			w1.BorderWidth = ((uint)(2));
			// Container child pnlDialog.Gtk.Box+BoxChild
			this.pnlConfigFields = new global::Gtk.Table (((uint)(12)), ((uint)(3)), false);
			this.pnlConfigFields.Name = "pnlConfigFields";
			this.pnlConfigFields.RowSpacing = ((uint)(2));
			this.pnlConfigFields.ColumnSpacing = ((uint)(2));
			// Container child pnlConfigFields.Gtk.Table+TableChild
			this.chkBeta = new global::Gtk.CheckButton ();
			this.chkBeta.TooltipMarkup = "Check for updates to BETA versions when you open the About window.";
			this.chkBeta.CanFocus = true;
			this.chkBeta.Name = "chkBeta";
			this.chkBeta.Label = global::Mono.Unix.Catalog.GetString ("Check for BETA updates");
			this.chkBeta.DrawIndicator = true;
			this.chkBeta.UseUnderline = true;
			this.pnlConfigFields.Add (this.chkBeta);
			global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.pnlConfigFields [this.chkBeta]));
			w2.TopAttach = ((uint)(9));
			w2.BottomAttach = ((uint)(10));
			w2.RightAttach = ((uint)(2));
			w2.XOptions = ((global::Gtk.AttachOptions)(4));
			w2.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlConfigFields.Gtk.Table+TableChild
			this.chkOverAlert = new global::Gtk.CheckButton ();
			this.chkOverAlert.TooltipMarkup = "Check this box to display an alert when you use too much bandwidth.";
			this.chkOverAlert.CanFocus = true;
			this.chkOverAlert.Name = "chkOverAlert";
			this.chkOverAlert.Label = global::Mono.Unix.Catalog.GetString ("Usage Alert");
			this.chkOverAlert.DrawIndicator = true;
			this.chkOverAlert.UseUnderline = true;
			this.pnlConfigFields.Add (this.chkOverAlert);
			global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.pnlConfigFields [this.chkOverAlert]));
			w3.TopAttach = ((uint)(10));
			w3.BottomAttach = ((uint)(11));
			w3.XOptions = ((global::Gtk.AttachOptions)(4));
			w3.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlConfigFields.Gtk.Table+TableChild
			this.chkScaleScreen = new global::Gtk.CheckButton ();
			this.chkScaleScreen.TooltipMarkup = "Text in the main window of Satellite Restriction Tracker will scale to fit its size.";
			this.chkScaleScreen.CanFocus = true;
			this.chkScaleScreen.Name = "chkScaleScreen";
			this.chkScaleScreen.Label = global::Mono.Unix.Catalog.GetString ("Scale text to window size");
			this.chkScaleScreen.DrawIndicator = true;
			this.chkScaleScreen.UseUnderline = true;
			this.pnlConfigFields.Add (this.chkScaleScreen);
			global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.pnlConfigFields [this.chkScaleScreen]));
			w4.TopAttach = ((uint)(8));
			w4.BottomAttach = ((uint)(9));
			w4.RightAttach = ((uint)(2));
			w4.XOptions = ((global::Gtk.AttachOptions)(4));
			w4.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlConfigFields.Gtk.Table+TableChild
			this.cmbProvider = global::Gtk.ComboBoxEntry.NewText ();
			this.cmbProvider.TooltipMarkup = "Your ViaSat Provider domain.\nIf you were given an E-Mail address, this is everything after the @ symbol.\nYou can choose a domain from the dropdown or enter your own to add it to the list.";
			this.cmbProvider.Name = "cmbProvider";
			this.pnlConfigFields.Add (this.cmbProvider);
			global::Gtk.Table.TableChild w5 = ((global::Gtk.Table.TableChild)(this.pnlConfigFields [this.cmbProvider]));
			w5.TopAttach = ((uint)(1));
			w5.BottomAttach = ((uint)(2));
			w5.LeftAttach = ((uint)(1));
			w5.RightAttach = ((uint)(2));
			w5.XOptions = ((global::Gtk.AttachOptions)(4));
			w5.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlConfigFields.Gtk.Table+TableChild
			this.cmdAlertStyle = new global::Gtk.Button ();
			this.cmdAlertStyle.TooltipMarkup = "Choose a style for the Alert Windows used for Usage Alerts and Parse Failures.";
			this.cmdAlertStyle.CanFocus = true;
			this.cmdAlertStyle.Name = "cmdAlertStyle";
			this.cmdAlertStyle.UseUnderline = true;
			this.cmdAlertStyle.Label = global::Mono.Unix.Catalog.GetString ("Set Alert Style");
			this.pnlConfigFields.Add (this.cmdAlertStyle);
			global::Gtk.Table.TableChild w6 = ((global::Gtk.Table.TableChild)(this.pnlConfigFields [this.cmdAlertStyle]));
			w6.TopAttach = ((uint)(11));
			w6.BottomAttach = ((uint)(12));
			w6.RightAttach = ((uint)(2));
			w6.XOptions = ((global::Gtk.AttachOptions)(3));
			w6.YOptions = ((global::Gtk.AttachOptions)(3));
			// Container child pnlConfigFields.Gtk.Table+TableChild
			this.cmdColors = new global::Gtk.Button ();
			this.cmdColors.TooltipMarkup = "Change the colors of the Main Window, Tray Icon, and History Graphs.";
			this.cmdColors.CanFocus = true;
			this.cmdColors.Name = "cmdColors";
			this.cmdColors.UseUnderline = true;
			this.cmdColors.Label = global::Mono.Unix.Catalog.GetString ("Graph _Colors");
			this.pnlConfigFields.Add (this.cmdColors);
			global::Gtk.Table.TableChild w7 = ((global::Gtk.Table.TableChild)(this.pnlConfigFields [this.cmdColors]));
			w7.TopAttach = ((uint)(11));
			w7.BottomAttach = ((uint)(12));
			w7.LeftAttach = ((uint)(2));
			w7.RightAttach = ((uint)(3));
			w7.XOptions = ((global::Gtk.AttachOptions)(3));
			w7.YOptions = ((global::Gtk.AttachOptions)(1));
			// Container child pnlConfigFields.Gtk.Table+TableChild
			this.evnSRT = new global::Gtk.EventBox ();
			this.evnSRT.Name = "evnSRT";
			// Container child evnSRT.Gtk.Container+ContainerChild
			this.pctSRT = new global::Gtk.Image ();
			this.pctSRT.TooltipMarkup = "Beep... Beep... Beep...";
			this.pctSRT.Name = "pctSRT";
			this.evnSRT.Add (this.pctSRT);
			this.pnlConfigFields.Add (this.evnSRT);
			global::Gtk.Table.TableChild w9 = ((global::Gtk.Table.TableChild)(this.pnlConfigFields [this.evnSRT]));
			w9.BottomAttach = ((uint)(2));
			w9.LeftAttach = ((uint)(2));
			w9.RightAttach = ((uint)(3));
			w9.XOptions = ((global::Gtk.AttachOptions)(4));
			w9.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlConfigFields.Gtk.Table+TableChild
			this.gbProxy = new global::Gtk.Frame ();
			this.gbProxy.Name = "gbProxy";
			// Container child gbProxy.Gtk.Container+ContainerChild
			this.alignProxy = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
			this.alignProxy.Name = "alignProxy";
			this.alignProxy.LeftPadding = ((uint)(3));
			this.alignProxy.TopPadding = ((uint)(3));
			this.alignProxy.RightPadding = ((uint)(3));
			this.alignProxy.BottomPadding = ((uint)(3));
			// Container child alignProxy.Gtk.Container+ContainerChild
			this.pnlProxy = new global::Gtk.Table (((uint)(7)), ((uint)(2)), false);
			this.pnlProxy.Name = "pnlProxy";
			this.pnlProxy.RowSpacing = ((uint)(2));
			this.pnlProxy.ColumnSpacing = ((uint)(2));
			// Container child pnlProxy.Gtk.Table+TableChild
			this.cmbProxyType = global::Gtk.ComboBox.NewText ();
			this.cmbProxyType.AppendText (global::Mono.Unix.Catalog.GetString ("None"));
			this.cmbProxyType.AppendText (global::Mono.Unix.Catalog.GetString ("System"));
			this.cmbProxyType.AppendText (global::Mono.Unix.Catalog.GetString ("IP"));
			this.cmbProxyType.AppendText (global::Mono.Unix.Catalog.GetString ("URL"));
			this.cmbProxyType.TooltipMarkup = "Type of Proxy to Use\n <b>None:</b> No Proxy\n <b>System:</b> Default System Proxy Settings\n <b>IP:</b> HTTP Proxy by IP Address and Port\n <b>URL:</b> HTTP Proxy by Web URL";
			this.cmbProxyType.Name = "cmbProxyType";
			this.cmbProxyType.Active = 0;
			this.pnlProxy.Add (this.cmbProxyType);
			global::Gtk.Table.TableChild w10 = ((global::Gtk.Table.TableChild)(this.pnlProxy [this.cmbProxyType]));
			w10.LeftAttach = ((uint)(1));
			w10.RightAttach = ((uint)(2));
			w10.XOptions = ((global::Gtk.AttachOptions)(4));
			w10.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlProxy.Gtk.Table+TableChild
			this.lblProxyAddr = new global::Gtk.Label ();
			this.lblProxyAddr.Name = "lblProxyAddr";
			this.lblProxyAddr.Xalign = 0F;
			this.lblProxyAddr.LabelProp = global::Mono.Unix.Catalog.GetString ("IP Address:");
			this.pnlProxy.Add (this.lblProxyAddr);
			global::Gtk.Table.TableChild w11 = ((global::Gtk.Table.TableChild)(this.pnlProxy [this.lblProxyAddr]));
			w11.TopAttach = ((uint)(1));
			w11.BottomAttach = ((uint)(2));
			w11.XOptions = ((global::Gtk.AttachOptions)(4));
			w11.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlProxy.Gtk.Table+TableChild
			this.lblProxyDomain = new global::Gtk.Label ();
			this.lblProxyDomain.Name = "lblProxyDomain";
			this.lblProxyDomain.Xalign = 0F;
			this.lblProxyDomain.LabelProp = global::Mono.Unix.Catalog.GetString ("Domain:");
			this.pnlProxy.Add (this.lblProxyDomain);
			global::Gtk.Table.TableChild w12 = ((global::Gtk.Table.TableChild)(this.pnlProxy [this.lblProxyDomain]));
			w12.TopAttach = ((uint)(5));
			w12.BottomAttach = ((uint)(6));
			w12.RightAttach = ((uint)(2));
			w12.XOptions = ((global::Gtk.AttachOptions)(4));
			w12.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlProxy.Gtk.Table+TableChild
			this.lblProxyPassword = new global::Gtk.Label ();
			this.lblProxyPassword.Name = "lblProxyPassword";
			this.lblProxyPassword.Xalign = 0F;
			this.lblProxyPassword.LabelProp = global::Mono.Unix.Catalog.GetString ("Password:");
			this.pnlProxy.Add (this.lblProxyPassword);
			global::Gtk.Table.TableChild w13 = ((global::Gtk.Table.TableChild)(this.pnlProxy [this.lblProxyPassword]));
			w13.TopAttach = ((uint)(3));
			w13.BottomAttach = ((uint)(4));
			w13.LeftAttach = ((uint)(1));
			w13.RightAttach = ((uint)(2));
			w13.XOptions = ((global::Gtk.AttachOptions)(4));
			w13.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlProxy.Gtk.Table+TableChild
			this.lblProxyPort = new global::Gtk.Label ();
			this.lblProxyPort.Name = "lblProxyPort";
			this.lblProxyPort.Xalign = 0F;
			this.lblProxyPort.LabelProp = global::Mono.Unix.Catalog.GetString ("Port:");
			this.pnlProxy.Add (this.lblProxyPort);
			global::Gtk.Table.TableChild w14 = ((global::Gtk.Table.TableChild)(this.pnlProxy [this.lblProxyPort]));
			w14.TopAttach = ((uint)(1));
			w14.BottomAttach = ((uint)(2));
			w14.LeftAttach = ((uint)(1));
			w14.RightAttach = ((uint)(2));
			w14.XOptions = ((global::Gtk.AttachOptions)(4));
			w14.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlProxy.Gtk.Table+TableChild
			this.lblProxyType = new global::Gtk.Label ();
			this.lblProxyType.Name = "lblProxyType";
			this.lblProxyType.Xalign = 0F;
			this.lblProxyType.LabelProp = global::Mono.Unix.Catalog.GetString ("Proxy Type:");
			this.pnlProxy.Add (this.lblProxyType);
			global::Gtk.Table.TableChild w15 = ((global::Gtk.Table.TableChild)(this.pnlProxy [this.lblProxyType]));
			w15.XOptions = ((global::Gtk.AttachOptions)(4));
			w15.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlProxy.Gtk.Table+TableChild
			this.lblProxyUser = new global::Gtk.Label ();
			this.lblProxyUser.Name = "lblProxyUser";
			this.lblProxyUser.Xalign = 0F;
			this.lblProxyUser.LabelProp = global::Mono.Unix.Catalog.GetString ("Username:");
			this.pnlProxy.Add (this.lblProxyUser);
			global::Gtk.Table.TableChild w16 = ((global::Gtk.Table.TableChild)(this.pnlProxy [this.lblProxyUser]));
			w16.TopAttach = ((uint)(3));
			w16.BottomAttach = ((uint)(4));
			w16.XOptions = ((global::Gtk.AttachOptions)(4));
			w16.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlProxy.Gtk.Table+TableChild
			this.txtProxyAddress = new global::Gtk.Entry ();
			this.txtProxyAddress.TooltipMarkup = "Address of HTTP Proxy to connect through.";
			this.txtProxyAddress.CanFocus = true;
			this.txtProxyAddress.Name = "txtProxyAddress";
			this.txtProxyAddress.IsEditable = true;
			this.txtProxyAddress.WidthChars = 15;
			this.txtProxyAddress.InvisibleChar = '●';
			this.pnlProxy.Add (this.txtProxyAddress);
			global::Gtk.Table.TableChild w17 = ((global::Gtk.Table.TableChild)(this.pnlProxy [this.txtProxyAddress]));
			w17.TopAttach = ((uint)(2));
			w17.BottomAttach = ((uint)(3));
			w17.XOptions = ((global::Gtk.AttachOptions)(4));
			w17.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlProxy.Gtk.Table+TableChild
			this.txtProxyDomain = new global::Gtk.Entry ();
			this.txtProxyDomain.TooltipMarkup = "Optional Domain for HTTP Proxy authentication.";
			this.txtProxyDomain.CanFocus = true;
			this.txtProxyDomain.Name = "txtProxyDomain";
			this.txtProxyDomain.IsEditable = true;
			this.txtProxyDomain.InvisibleChar = '●';
			this.pnlProxy.Add (this.txtProxyDomain);
			global::Gtk.Table.TableChild w18 = ((global::Gtk.Table.TableChild)(this.pnlProxy [this.txtProxyDomain]));
			w18.TopAttach = ((uint)(6));
			w18.BottomAttach = ((uint)(7));
			w18.RightAttach = ((uint)(2));
			w18.XOptions = ((global::Gtk.AttachOptions)(4));
			w18.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlProxy.Gtk.Table+TableChild
			this.txtProxyPassword = new global::Gtk.Entry ();
			this.txtProxyPassword.TooltipMarkup = "Optional Password for HTTP Proxy authentication.";
			this.txtProxyPassword.CanFocus = true;
			this.txtProxyPassword.Name = "txtProxyPassword";
			this.txtProxyPassword.IsEditable = true;
			this.txtProxyPassword.WidthChars = 15;
			this.txtProxyPassword.InvisibleChar = '●';
			this.pnlProxy.Add (this.txtProxyPassword);
			global::Gtk.Table.TableChild w19 = ((global::Gtk.Table.TableChild)(this.pnlProxy [this.txtProxyPassword]));
			w19.TopAttach = ((uint)(4));
			w19.BottomAttach = ((uint)(5));
			w19.LeftAttach = ((uint)(1));
			w19.RightAttach = ((uint)(2));
			w19.XOptions = ((global::Gtk.AttachOptions)(4));
			w19.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlProxy.Gtk.Table+TableChild
			this.txtProxyPort = new global::Gtk.SpinButton (1, 65535, 1);
			this.txtProxyPort.TooltipMarkup = "Port to connect to HTTP proxy over.";
			this.txtProxyPort.CanFocus = true;
			this.txtProxyPort.Name = "txtProxyPort";
			this.txtProxyPort.Adjustment.PageIncrement = 10;
			this.txtProxyPort.ClimbRate = 1;
			this.txtProxyPort.Numeric = true;
			this.txtProxyPort.Value = 8080;
			this.pnlProxy.Add (this.txtProxyPort);
			global::Gtk.Table.TableChild w20 = ((global::Gtk.Table.TableChild)(this.pnlProxy [this.txtProxyPort]));
			w20.TopAttach = ((uint)(2));
			w20.BottomAttach = ((uint)(3));
			w20.LeftAttach = ((uint)(1));
			w20.RightAttach = ((uint)(2));
			w20.XOptions = ((global::Gtk.AttachOptions)(0));
			w20.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlProxy.Gtk.Table+TableChild
			this.txtProxyUser = new global::Gtk.Entry ();
			this.txtProxyUser.TooltipMarkup = "Optional Username for HTTP Proxy authentication.";
			this.txtProxyUser.CanFocus = true;
			this.txtProxyUser.Name = "txtProxyUser";
			this.txtProxyUser.IsEditable = true;
			this.txtProxyUser.WidthChars = 15;
			this.txtProxyUser.InvisibleChar = '●';
			this.pnlProxy.Add (this.txtProxyUser);
			global::Gtk.Table.TableChild w21 = ((global::Gtk.Table.TableChild)(this.pnlProxy [this.txtProxyUser]));
			w21.TopAttach = ((uint)(4));
			w21.BottomAttach = ((uint)(5));
			w21.XOptions = ((global::Gtk.AttachOptions)(4));
			w21.YOptions = ((global::Gtk.AttachOptions)(4));
			this.alignProxy.Add (this.pnlProxy);
			this.gbProxy.Add (this.alignProxy);
			this.lblProxy = new global::Gtk.Label ();
			this.lblProxy.Name = "lblProxy";
			this.lblProxy.LabelProp = global::Mono.Unix.Catalog.GetString ("HTTP Proxy");
			this.lblProxy.UseMarkup = true;
			this.gbProxy.LabelWidget = this.lblProxy;
			this.pnlConfigFields.Add (this.gbProxy);
			global::Gtk.Table.TableChild w24 = ((global::Gtk.Table.TableChild)(this.pnlConfigFields [this.gbProxy]));
			w24.TopAttach = ((uint)(3));
			w24.BottomAttach = ((uint)(10));
			w24.LeftAttach = ((uint)(2));
			w24.RightAttach = ((uint)(3));
			w24.XOptions = ((global::Gtk.AttachOptions)(4));
			w24.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlConfigFields.Gtk.Table+TableChild
			this.hbox1 = new global::Gtk.HBox ();
			this.hbox1.Name = "hbox1";
			this.hbox1.Spacing = 6;
			// Container child hbox1.Gtk.Box+BoxChild
			this.lblProtocolSSL = new global::Gtk.Label ();
			this.lblProtocolSSL.Name = "lblProtocolSSL";
			this.lblProtocolSSL.LabelProp = global::Mono.Unix.Catalog.GetString ("Security Protocol:");
			this.hbox1.Add (this.lblProtocolSSL);
			global::Gtk.Box.BoxChild w25 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.lblProtocolSSL]));
			w25.Position = 0;
			w25.Expand = false;
			w25.Fill = false;
			// Container child hbox1.Gtk.Box+BoxChild
			this.chkProtocolSSL = new global::Gtk.CheckButton ();
			this.chkProtocolSSL.TooltipMarkup = "Check this box to use the older SSL 3.0 instead of TLS 1.0 for secure connections.";
			this.chkProtocolSSL.CanFocus = true;
			this.chkProtocolSSL.Name = "chkProtocolSSL";
			this.chkProtocolSSL.Label = global::Mono.Unix.Catalog.GetString ("Use Legacy SSL 3.0");
			this.chkProtocolSSL.DrawIndicator = true;
			this.chkProtocolSSL.UseUnderline = true;
			this.hbox1.Add (this.chkProtocolSSL);
			global::Gtk.Box.BoxChild w26 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.chkProtocolSSL]));
			w26.Position = 1;
			this.pnlConfigFields.Add (this.hbox1);
			global::Gtk.Table.TableChild w27 = ((global::Gtk.Table.TableChild)(this.pnlConfigFields [this.hbox1]));
			w27.TopAttach = ((uint)(10));
			w27.BottomAttach = ((uint)(11));
			w27.LeftAttach = ((uint)(2));
			w27.RightAttach = ((uint)(3));
			w27.XOptions = ((global::Gtk.AttachOptions)(4));
			w27.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlConfigFields.Gtk.Table+TableChild
			this.lblAccount = new global::Gtk.Label ();
			this.lblAccount.Name = "lblAccount";
			this.lblAccount.Xalign = 0F;
			this.lblAccount.LabelProp = global::Mono.Unix.Catalog.GetString ("Username:");
			this.pnlConfigFields.Add (this.lblAccount);
			global::Gtk.Table.TableChild w28 = ((global::Gtk.Table.TableChild)(this.pnlConfigFields [this.lblAccount]));
			w28.XOptions = ((global::Gtk.AttachOptions)(4));
			w28.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlConfigFields.Gtk.Table+TableChild
			this.lblAccuracy = new global::Gtk.Label ();
			this.lblAccuracy.Name = "lblAccuracy";
			this.lblAccuracy.Xalign = 0F;
			this.lblAccuracy.LabelProp = global::Mono.Unix.Catalog.GetString ("Usage Accuracy:");
			this.pnlConfigFields.Add (this.lblAccuracy);
			global::Gtk.Table.TableChild w29 = ((global::Gtk.Table.TableChild)(this.pnlConfigFields [this.lblAccuracy]));
			w29.TopAttach = ((uint)(6));
			w29.BottomAttach = ((uint)(7));
			w29.XOptions = ((global::Gtk.AttachOptions)(4));
			w29.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlConfigFields.Gtk.Table+TableChild
			this.lblHistoryDir = new global::Gtk.Label ();
			this.lblHistoryDir.Name = "lblHistoryDir";
			this.lblHistoryDir.Xalign = 0F;
			this.lblHistoryDir.LabelProp = global::Mono.Unix.Catalog.GetString ("Data Directory:");
			this.pnlConfigFields.Add (this.lblHistoryDir);
			global::Gtk.Table.TableChild w30 = ((global::Gtk.Table.TableChild)(this.pnlConfigFields [this.lblHistoryDir]));
			w30.TopAttach = ((uint)(7));
			w30.BottomAttach = ((uint)(8));
			w30.XOptions = ((global::Gtk.AttachOptions)(4));
			w30.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlConfigFields.Gtk.Table+TableChild
			this.lblInterval = new global::Gtk.Label ();
			this.lblInterval.Name = "lblInterval";
			this.lblInterval.Xalign = 0F;
			this.lblInterval.LabelProp = global::Mono.Unix.Catalog.GetString ("Update Interval:");
			this.pnlConfigFields.Add (this.lblInterval);
			global::Gtk.Table.TableChild w31 = ((global::Gtk.Table.TableChild)(this.pnlConfigFields [this.lblInterval]));
			w31.TopAttach = ((uint)(4));
			w31.BottomAttach = ((uint)(5));
			w31.XOptions = ((global::Gtk.AttachOptions)(4));
			w31.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlConfigFields.Gtk.Table+TableChild
			this.lblKey = new global::Gtk.Label ();
			this.lblKey.Name = "lblKey";
			this.lblKey.Xalign = 0F;
			this.lblKey.LabelProp = global::Mono.Unix.Catalog.GetString ("Product Key:");
			this.pnlConfigFields.Add (this.lblKey);
			global::Gtk.Table.TableChild w32 = ((global::Gtk.Table.TableChild)(this.pnlConfigFields [this.lblKey]));
			w32.TopAttach = ((uint)(2));
			w32.BottomAttach = ((uint)(3));
			w32.XOptions = ((global::Gtk.AttachOptions)(4));
			w32.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlConfigFields.Gtk.Table+TableChild
			this.lblPassword = new global::Gtk.Label ();
			this.lblPassword.Name = "lblPassword";
			this.lblPassword.Xalign = 0F;
			this.lblPassword.LabelProp = global::Mono.Unix.Catalog.GetString ("Password:");
			this.pnlConfigFields.Add (this.lblPassword);
			global::Gtk.Table.TableChild w33 = ((global::Gtk.Table.TableChild)(this.pnlConfigFields [this.lblPassword]));
			w33.TopAttach = ((uint)(3));
			w33.BottomAttach = ((uint)(4));
			w33.XOptions = ((global::Gtk.AttachOptions)(4));
			w33.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlConfigFields.Gtk.Table+TableChild
			this.lblProvider = new global::Gtk.Label ();
			this.lblProvider.Name = "lblProvider";
			this.lblProvider.Xalign = 0F;
			this.lblProvider.LabelProp = global::Mono.Unix.Catalog.GetString ("Provider:");
			this.pnlConfigFields.Add (this.lblProvider);
			global::Gtk.Table.TableChild w34 = ((global::Gtk.Table.TableChild)(this.pnlConfigFields [this.lblProvider]));
			w34.TopAttach = ((uint)(1));
			w34.BottomAttach = ((uint)(2));
			w34.XOptions = ((global::Gtk.AttachOptions)(4));
			w34.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlConfigFields.Gtk.Table+TableChild
			this.lblPurchaseKey = new global::Gtk.Label ();
			this.lblPurchaseKey.CanFocus = true;
			this.lblPurchaseKey.Name = "lblPurchaseKey";
			this.lblPurchaseKey.Xalign = 0F;
			this.lblPurchaseKey.Yalign = 0F;
			this.lblPurchaseKey.LabelProp = global::Mono.Unix.Catalog.GetString ("Purchase a Key");
			this.pnlConfigFields.Add (this.lblPurchaseKey);
			global::Gtk.Table.TableChild w35 = ((global::Gtk.Table.TableChild)(this.pnlConfigFields [this.lblPurchaseKey]));
			w35.TopAttach = ((uint)(2));
			w35.BottomAttach = ((uint)(3));
			w35.LeftAttach = ((uint)(2));
			w35.RightAttach = ((uint)(3));
			w35.XOptions = ((global::Gtk.AttachOptions)(4));
			w35.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlConfigFields.Gtk.Table+TableChild
			this.lblTimeout = new global::Gtk.Label ();
			this.lblTimeout.Name = "lblTimeout";
			this.lblTimeout.Xalign = 0F;
			this.lblTimeout.LabelProp = global::Mono.Unix.Catalog.GetString ("Network Timeout:");
			this.pnlConfigFields.Add (this.lblTimeout);
			global::Gtk.Table.TableChild w36 = ((global::Gtk.Table.TableChild)(this.pnlConfigFields [this.lblTimeout]));
			w36.TopAttach = ((uint)(5));
			w36.BottomAttach = ((uint)(6));
			w36.XOptions = ((global::Gtk.AttachOptions)(4));
			w36.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlConfigFields.Gtk.Table+TableChild
			this.pnlAccuracy = new global::Gtk.HBox ();
			this.pnlAccuracy.Name = "pnlAccuracy";
			this.pnlAccuracy.Spacing = 6;
			// Container child pnlAccuracy.Gtk.Box+BoxChild
			this.txtAccuracy = new global::Gtk.SpinButton (0, 4, 1);
			this.txtAccuracy.TooltipMarkup = "Number of decimal places to display.";
			this.txtAccuracy.CanFocus = true;
			this.txtAccuracy.Name = "txtAccuracy";
			this.txtAccuracy.Adjustment.PageIncrement = 1;
			this.txtAccuracy.ClimbRate = 1;
			this.txtAccuracy.Numeric = true;
			this.pnlAccuracy.Add (this.txtAccuracy);
			global::Gtk.Box.BoxChild w37 = ((global::Gtk.Box.BoxChild)(this.pnlAccuracy [this.txtAccuracy]));
			w37.Position = 0;
			w37.Expand = false;
			w37.Fill = false;
			// Container child pnlAccuracy.Gtk.Box+BoxChild
			this.lblAccuracyScale = new global::Gtk.Label ();
			this.lblAccuracyScale.Name = "lblAccuracyScale";
			this.lblAccuracyScale.LabelProp = global::Mono.Unix.Catalog.GetString ("decimal places");
			this.pnlAccuracy.Add (this.lblAccuracyScale);
			global::Gtk.Box.BoxChild w38 = ((global::Gtk.Box.BoxChild)(this.pnlAccuracy [this.lblAccuracyScale]));
			w38.Position = 1;
			w38.Expand = false;
			w38.Fill = false;
			this.pnlConfigFields.Add (this.pnlAccuracy);
			global::Gtk.Table.TableChild w39 = ((global::Gtk.Table.TableChild)(this.pnlConfigFields [this.pnlAccuracy]));
			w39.TopAttach = ((uint)(6));
			w39.BottomAttach = ((uint)(7));
			w39.LeftAttach = ((uint)(1));
			w39.RightAttach = ((uint)(2));
			w39.XOptions = ((global::Gtk.AttachOptions)(4));
			w39.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlConfigFields.Gtk.Table+TableChild
			this.pnlInterval = new global::Gtk.HBox ();
			this.pnlInterval.Name = "pnlInterval";
			this.pnlInterval.Spacing = 6;
			// Container child pnlInterval.Gtk.Box+BoxChild
			this.txtInterval = new global::Gtk.SpinButton (15, 1440, 1);
			this.txtInterval.TooltipMarkup = "Interval between bandwidth checks in minutes.";
			this.txtInterval.CanFocus = true;
			this.txtInterval.Name = "txtInterval";
			this.txtInterval.Adjustment.PageIncrement = 5;
			this.txtInterval.ClimbRate = 1;
			this.txtInterval.Numeric = true;
			this.txtInterval.Value = 15;
			this.pnlInterval.Add (this.txtInterval);
			global::Gtk.Box.BoxChild w40 = ((global::Gtk.Box.BoxChild)(this.pnlInterval [this.txtInterval]));
			w40.Position = 0;
			w40.Expand = false;
			w40.Fill = false;
			// Container child pnlInterval.Gtk.Box+BoxChild
			this.lblIntervalScale = new global::Gtk.Label ();
			this.lblIntervalScale.Name = "lblIntervalScale";
			this.lblIntervalScale.Xalign = 0F;
			this.lblIntervalScale.LabelProp = global::Mono.Unix.Catalog.GetString ("minutes");
			this.pnlInterval.Add (this.lblIntervalScale);
			global::Gtk.Box.BoxChild w41 = ((global::Gtk.Box.BoxChild)(this.pnlInterval [this.lblIntervalScale]));
			w41.Position = 1;
			w41.Expand = false;
			w41.Fill = false;
			this.pnlConfigFields.Add (this.pnlInterval);
			global::Gtk.Table.TableChild w42 = ((global::Gtk.Table.TableChild)(this.pnlConfigFields [this.pnlInterval]));
			w42.TopAttach = ((uint)(4));
			w42.BottomAttach = ((uint)(5));
			w42.LeftAttach = ((uint)(1));
			w42.RightAttach = ((uint)(2));
			w42.XOptions = ((global::Gtk.AttachOptions)(4));
			w42.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlConfigFields.Gtk.Table+TableChild
			this.pnlKey = new global::Gtk.HBox ();
			this.pnlKey.Name = "pnlKey";
			this.pnlKey.Spacing = 6;
			// Container child pnlKey.Gtk.Box+BoxChild
			this.txtKey1 = new global::Gtk.Entry ();
			this.txtKey1.TooltipMarkup = "Your Remote Usage Service Product Key.";
			this.txtKey1.CanFocus = true;
			this.txtKey1.Name = "txtKey1";
			this.txtKey1.IsEditable = true;
			this.txtKey1.WidthChars = 7;
			this.txtKey1.MaxLength = 6;
			this.txtKey1.InvisibleChar = '●';
			this.txtKey1.Xalign = 0.5F;
			this.pnlKey.Add (this.txtKey1);
			global::Gtk.Box.BoxChild w43 = ((global::Gtk.Box.BoxChild)(this.pnlKey [this.txtKey1]));
			w43.Position = 0;
			w43.Expand = false;
			w43.Fill = false;
			// Container child pnlKey.Gtk.Box+BoxChild
			this.txtKey2 = new global::Gtk.Entry ();
			this.txtKey2.TooltipMarkup = "Your Remote Usage Service Product Key.";
			this.txtKey2.CanFocus = true;
			this.txtKey2.Name = "txtKey2";
			this.txtKey2.IsEditable = true;
			this.txtKey2.WidthChars = 5;
			this.txtKey2.MaxLength = 4;
			this.txtKey2.InvisibleChar = '●';
			this.txtKey2.Xalign = 0.5F;
			this.pnlKey.Add (this.txtKey2);
			global::Gtk.Box.BoxChild w44 = ((global::Gtk.Box.BoxChild)(this.pnlKey [this.txtKey2]));
			w44.Position = 1;
			w44.Expand = false;
			w44.Fill = false;
			// Container child pnlKey.Gtk.Box+BoxChild
			this.txtKey3 = new global::Gtk.Entry ();
			this.txtKey3.TooltipMarkup = "Your Remote Usage Service Product Key.";
			this.txtKey3.CanFocus = true;
			this.txtKey3.Name = "txtKey3";
			this.txtKey3.IsEditable = true;
			this.txtKey3.WidthChars = 5;
			this.txtKey3.MaxLength = 4;
			this.txtKey3.InvisibleChar = '●';
			this.txtKey3.Xalign = 0.5F;
			this.pnlKey.Add (this.txtKey3);
			global::Gtk.Box.BoxChild w45 = ((global::Gtk.Box.BoxChild)(this.pnlKey [this.txtKey3]));
			w45.Position = 2;
			w45.Expand = false;
			w45.Fill = false;
			// Container child pnlKey.Gtk.Box+BoxChild
			this.txtKey4 = new global::Gtk.Entry ();
			this.txtKey4.TooltipMarkup = "Your Remote Usage Service Product Key.";
			this.txtKey4.CanFocus = true;
			this.txtKey4.Name = "txtKey4";
			this.txtKey4.IsEditable = true;
			this.txtKey4.WidthChars = 5;
			this.txtKey4.MaxLength = 4;
			this.txtKey4.InvisibleChar = '●';
			this.txtKey4.Xalign = 0.5F;
			this.pnlKey.Add (this.txtKey4);
			global::Gtk.Box.BoxChild w46 = ((global::Gtk.Box.BoxChild)(this.pnlKey [this.txtKey4]));
			w46.Position = 3;
			w46.Expand = false;
			w46.Fill = false;
			// Container child pnlKey.Gtk.Box+BoxChild
			this.txtKey5 = new global::Gtk.Entry ();
			this.txtKey5.TooltipMarkup = "Your Remote Usage Service Product Key.";
			this.txtKey5.CanFocus = true;
			this.txtKey5.Name = "txtKey5";
			this.txtKey5.IsEditable = true;
			this.txtKey5.WidthChars = 7;
			this.txtKey5.MaxLength = 6;
			this.txtKey5.InvisibleChar = '●';
			this.txtKey5.Xalign = 0.5F;
			this.pnlKey.Add (this.txtKey5);
			global::Gtk.Box.BoxChild w47 = ((global::Gtk.Box.BoxChild)(this.pnlKey [this.txtKey5]));
			w47.Position = 4;
			w47.Expand = false;
			w47.Fill = false;
			// Container child pnlKey.Gtk.Box+BoxChild
			this.evnKeyState = new global::Gtk.EventBox ();
			this.evnKeyState.Name = "evnKeyState";
			// Container child evnKeyState.Gtk.Container+ContainerChild
			this.pctKeyState = new global::Gtk.Image ();
			this.pctKeyState.WidthRequest = 16;
			this.pctKeyState.HeightRequest = 16;
			this.pctKeyState.Name = "pctKeyState";
			this.pctKeyState.Pixbuf = global::Gdk.Pixbuf.LoadFromResource ("RestrictionTrackerGTK.Resources.error.png");
			this.evnKeyState.Add (this.pctKeyState);
			this.pnlKey.Add (this.evnKeyState);
			global::Gtk.Box.BoxChild w49 = ((global::Gtk.Box.BoxChild)(this.pnlKey [this.evnKeyState]));
			w49.Position = 5;
			this.pnlConfigFields.Add (this.pnlKey);
			global::Gtk.Table.TableChild w50 = ((global::Gtk.Table.TableChild)(this.pnlConfigFields [this.pnlKey]));
			w50.TopAttach = ((uint)(2));
			w50.BottomAttach = ((uint)(3));
			w50.LeftAttach = ((uint)(1));
			w50.RightAttach = ((uint)(2));
			w50.XOptions = ((global::Gtk.AttachOptions)(4));
			w50.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlConfigFields.Gtk.Table+TableChild
			this.pnlOverAlert = new global::Gtk.HBox ();
			this.pnlOverAlert.Name = "pnlOverAlert";
			this.pnlOverAlert.Spacing = 6;
			// Container child pnlOverAlert.Gtk.Box+BoxChild
			this.txtOverSize = new global::Gtk.SpinButton (25, 5000, 1);
			this.txtOverSize.TooltipMarkup = "Enter the amount of bandwidth usage to display an alert about (in Megabytes).";
			this.txtOverSize.CanFocus = true;
			this.txtOverSize.Name = "txtOverSize";
			this.txtOverSize.Adjustment.PageIncrement = 100;
			this.txtOverSize.ClimbRate = 1;
			this.txtOverSize.Numeric = true;
			this.txtOverSize.Value = 100;
			this.pnlOverAlert.Add (this.txtOverSize);
			global::Gtk.Box.BoxChild w51 = ((global::Gtk.Box.BoxChild)(this.pnlOverAlert [this.txtOverSize]));
			w51.Position = 0;
			w51.Expand = false;
			w51.Fill = false;
			// Container child pnlOverAlert.Gtk.Box+BoxChild
			this.lblOverSize = new global::Gtk.Label ();
			this.lblOverSize.Name = "lblOverSize";
			this.lblOverSize.LabelProp = global::Mono.Unix.Catalog.GetString ("MB in");
			this.pnlOverAlert.Add (this.lblOverSize);
			global::Gtk.Box.BoxChild w52 = ((global::Gtk.Box.BoxChild)(this.pnlOverAlert [this.lblOverSize]));
			w52.Position = 1;
			w52.Expand = false;
			w52.Fill = false;
			// Container child pnlOverAlert.Gtk.Box+BoxChild
			this.txtOverTime = new global::Gtk.SpinButton (15, 360, 1);
			this.txtOverTime.TooltipMarkup = "Enter the duration of time to check for the defined bandwidth usage (in minutes).";
			this.txtOverTime.CanFocus = true;
			this.txtOverTime.Name = "txtOverTime";
			this.txtOverTime.Adjustment.PageIncrement = 15;
			this.txtOverTime.ClimbRate = 1;
			this.txtOverTime.Numeric = true;
			this.txtOverTime.Value = 15;
			this.pnlOverAlert.Add (this.txtOverTime);
			global::Gtk.Box.BoxChild w53 = ((global::Gtk.Box.BoxChild)(this.pnlOverAlert [this.txtOverTime]));
			w53.Position = 2;
			w53.Expand = false;
			w53.Fill = false;
			// Container child pnlOverAlert.Gtk.Box+BoxChild
			this.lblOverTime = new global::Gtk.Label ();
			this.lblOverTime.Name = "lblOverTime";
			this.lblOverTime.LabelProp = global::Mono.Unix.Catalog.GetString ("minutes");
			this.pnlOverAlert.Add (this.lblOverTime);
			global::Gtk.Box.BoxChild w54 = ((global::Gtk.Box.BoxChild)(this.pnlOverAlert [this.lblOverTime]));
			w54.Position = 3;
			w54.Expand = false;
			w54.Fill = false;
			this.pnlConfigFields.Add (this.pnlOverAlert);
			global::Gtk.Table.TableChild w55 = ((global::Gtk.Table.TableChild)(this.pnlConfigFields [this.pnlOverAlert]));
			w55.TopAttach = ((uint)(10));
			w55.BottomAttach = ((uint)(11));
			w55.LeftAttach = ((uint)(1));
			w55.RightAttach = ((uint)(2));
			w55.XOptions = ((global::Gtk.AttachOptions)(7));
			w55.YOptions = ((global::Gtk.AttachOptions)(6));
			// Container child pnlConfigFields.Gtk.Table+TableChild
			this.pnlPassword = new global::Gtk.HBox ();
			this.pnlPassword.Name = "pnlPassword";
			this.pnlPassword.Spacing = 6;
			// Container child pnlPassword.Gtk.Box+BoxChild
			this.txtPassword = new global::Gtk.Entry ();
			this.txtPassword.TooltipMarkup = "The password to your ViaSat account.";
			this.txtPassword.CanFocus = true;
			this.txtPassword.Name = "txtPassword";
			this.txtPassword.IsEditable = true;
			this.txtPassword.InvisibleChar = '●';
			this.pnlPassword.Add (this.txtPassword);
			global::Gtk.Box.BoxChild w56 = ((global::Gtk.Box.BoxChild)(this.pnlPassword [this.txtPassword]));
			w56.Position = 0;
			// Container child pnlPassword.Gtk.Box+BoxChild
			this.cmdPassDisplay = new global::Gtk.ToggleButton ();
			this.cmdPassDisplay.TooltipMarkup = "Toggle display of the password.";
			this.cmdPassDisplay.CanFocus = true;
			this.cmdPassDisplay.Name = "cmdPassDisplay";
			this.cmdPassDisplay.UseUnderline = true;
			this.cmdPassDisplay.Active = true;
			// Container child cmdPassDisplay.Gtk.Container+ContainerChild
			global::Gtk.Alignment w57 = new global::Gtk.Alignment (0.5F, 0.5F, 0F, 0F);
			// Container child GtkAlignment.Gtk.Container+ContainerChild
			global::Gtk.HBox w58 = new global::Gtk.HBox ();
			w58.Spacing = 2;
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Image w59 = new global::Gtk.Image ();
			w59.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-dialog-authentication", global::Gtk.IconSize.Button);
			w58.Add (w59);
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Label w61 = new global::Gtk.Label ();
			w58.Add (w61);
			w57.Add (w58);
			this.cmdPassDisplay.Add (w57);
			this.pnlPassword.Add (this.cmdPassDisplay);
			global::Gtk.Box.BoxChild w65 = ((global::Gtk.Box.BoxChild)(this.pnlPassword [this.cmdPassDisplay]));
			w65.Position = 1;
			w65.Expand = false;
			w65.Fill = false;
			this.pnlConfigFields.Add (this.pnlPassword);
			global::Gtk.Table.TableChild w66 = ((global::Gtk.Table.TableChild)(this.pnlConfigFields [this.pnlPassword]));
			w66.TopAttach = ((uint)(3));
			w66.BottomAttach = ((uint)(4));
			w66.LeftAttach = ((uint)(1));
			w66.RightAttach = ((uint)(2));
			w66.XOptions = ((global::Gtk.AttachOptions)(4));
			w66.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlConfigFields.Gtk.Table+TableChild
			this.pnlTimeout = new global::Gtk.HBox ();
			this.pnlTimeout.Name = "pnlTimeout";
			this.pnlTimeout.Spacing = 6;
			// Container child pnlTimeout.Gtk.Box+BoxChild
			this.txtTimeout = new global::Gtk.SpinButton (5, 600, 1);
			this.txtTimeout.TooltipMarkup = "Number of seconds to wait between network communications.";
			this.txtTimeout.CanFocus = true;
			this.txtTimeout.Name = "txtTimeout";
			this.txtTimeout.Adjustment.PageIncrement = 15;
			this.txtTimeout.ClimbRate = 1;
			this.txtTimeout.Numeric = true;
			this.txtTimeout.Value = 60;
			this.pnlTimeout.Add (this.txtTimeout);
			global::Gtk.Box.BoxChild w67 = ((global::Gtk.Box.BoxChild)(this.pnlTimeout [this.txtTimeout]));
			w67.Position = 0;
			w67.Expand = false;
			w67.Fill = false;
			// Container child pnlTimeout.Gtk.Box+BoxChild
			this.lblTimeoutScale = new global::Gtk.Label ();
			this.lblTimeoutScale.Name = "lblTimeoutScale";
			this.lblTimeoutScale.LabelProp = global::Mono.Unix.Catalog.GetString ("seconds");
			this.pnlTimeout.Add (this.lblTimeoutScale);
			global::Gtk.Box.BoxChild w68 = ((global::Gtk.Box.BoxChild)(this.pnlTimeout [this.lblTimeoutScale]));
			w68.Position = 1;
			w68.Expand = false;
			w68.Fill = false;
			this.pnlConfigFields.Add (this.pnlTimeout);
			global::Gtk.Table.TableChild w69 = ((global::Gtk.Table.TableChild)(this.pnlConfigFields [this.pnlTimeout]));
			w69.TopAttach = ((uint)(5));
			w69.BottomAttach = ((uint)(6));
			w69.LeftAttach = ((uint)(1));
			w69.RightAttach = ((uint)(2));
			w69.XOptions = ((global::Gtk.AttachOptions)(4));
			w69.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlConfigFields.Gtk.Table+TableChild
			this.txtAccount = new global::Gtk.Entry ();
			this.txtAccount.TooltipMarkup = "Your ViaSat Username.\nIf you were provided with an E-Mail address, this is the first half of that address.";
			this.txtAccount.CanFocus = true;
			this.txtAccount.Name = "txtAccount";
			this.txtAccount.IsEditable = true;
			this.txtAccount.InvisibleChar = '●';
			this.pnlConfigFields.Add (this.txtAccount);
			global::Gtk.Table.TableChild w70 = ((global::Gtk.Table.TableChild)(this.pnlConfigFields [this.txtAccount]));
			w70.LeftAttach = ((uint)(1));
			w70.RightAttach = ((uint)(2));
			w70.XOptions = ((global::Gtk.AttachOptions)(4));
			w70.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlConfigFields.Gtk.Table+TableChild
			this.txtHistoryDir = new global::Gtk.FileChooserButton (global::Mono.Unix.Catalog.GetString ("Select a Directory"), ((global::Gtk.FileChooserAction)(2)));
			this.txtHistoryDir.TooltipMarkup = "Directory used to save History Data.";
			this.txtHistoryDir.CanFocus = true;
			this.txtHistoryDir.Name = "txtHistoryDir";
			this.txtHistoryDir.ShowHidden = true;
			this.pnlConfigFields.Add (this.txtHistoryDir);
			global::Gtk.Table.TableChild w71 = ((global::Gtk.Table.TableChild)(this.pnlConfigFields [this.txtHistoryDir]));
			w71.TopAttach = ((uint)(7));
			w71.BottomAttach = ((uint)(8));
			w71.LeftAttach = ((uint)(1));
			w71.RightAttach = ((uint)(2));
			w71.XOptions = ((global::Gtk.AttachOptions)(4));
			w71.YOptions = ((global::Gtk.AttachOptions)(4));
			w1.Add (this.pnlConfigFields);
			global::Gtk.Box.BoxChild w72 = ((global::Gtk.Box.BoxChild)(w1 [this.pnlConfigFields]));
			w72.Position = 0;
			w72.Expand = false;
			w72.Fill = false;
			// Internal child RestrictionTrackerGTK.dlgConfig.ActionArea
			global::Gtk.HButtonBox w73 = this.ActionArea;
			w73.Name = "pnlConfigButtons";
			w73.Spacing = 10;
			w73.BorderWidth = ((uint)(5));
			w73.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(4));
			// Container child pnlConfigButtons.Gtk.ButtonBox+ButtonBoxChild
			this.cmdSave = new global::Gtk.Button ();
			this.cmdSave.TooltipMarkup = "Save Changes to the Configuration.";
			this.cmdSave.CanDefault = true;
			this.cmdSave.CanFocus = true;
			this.cmdSave.Name = "cmdSave";
			this.cmdSave.UseUnderline = true;
			this.cmdSave.Label = global::Mono.Unix.Catalog.GetString ("_Save");
			w73.Add (this.cmdSave);
			global::Gtk.ButtonBox.ButtonBoxChild w74 = ((global::Gtk.ButtonBox.ButtonBoxChild)(w73 [this.cmdSave]));
			w74.Expand = false;
			w74.Fill = false;
			// Container child pnlConfigButtons.Gtk.ButtonBox+ButtonBoxChild
			this.cmdClose = new global::Gtk.Button ();
			this.cmdClose.TooltipMarkup = "Close the Configuration window.";
			this.cmdClose.CanDefault = true;
			this.cmdClose.CanFocus = true;
			this.cmdClose.Name = "cmdClose";
			this.cmdClose.UseUnderline = true;
			this.cmdClose.Label = global::Mono.Unix.Catalog.GetString ("_Close");
			w73.Add (this.cmdClose);
			global::Gtk.ButtonBox.ButtonBoxChild w75 = ((global::Gtk.ButtonBox.ButtonBoxChild)(w73 [this.cmdClose]));
			w75.Position = 1;
			w75.Expand = false;
			w75.Fill = false;
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.DefaultWidth = 638;
			this.DefaultHeight = 364;
			this.Hide ();
		}
	}
}
