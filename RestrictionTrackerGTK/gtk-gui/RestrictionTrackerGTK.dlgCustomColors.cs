
// This file has been generated by the GUI designer. Do not modify.
namespace RestrictionTrackerGTK
{
	public partial class dlgCustomColors
	{
		private global::Gtk.Table pnlCustomColors;

		private global::Gtk.Frame grpHistory;

		private global::Gtk.Alignment algnHistory;

		private global::Gtk.Table pnlHistory;

		private global::Gtk.EventBox evnHistory;

		private global::Gtk.Image pctHistory;

		private global::Gtk.Frame grpHistoryUsed;

		private global::Gtk.Alignment algnHistoryUsed;

		private global::Gtk.Table pnlHistoryUsed;

		private global::Gtk.CheckButton chkHistoryUsedB;

		private global::Gtk.ColorButton cmdHistoryUsedA;

		private global::Gtk.ColorButton cmdHistoryUsedB;

		private global::Gtk.ColorButton cmdHistoryUsedC;

		private global::Gtk.ColorButton cmdHistoryUsedLine;

		private global::Gtk.ColorButton cmdHistoryUsedMax;

		private global::Gtk.Label lblHistoryUsedA;

		private global::Gtk.Label lblHistoryUsedC;

		private global::Gtk.Label lblHistoryUsedLine;

		private global::Gtk.Label lblHistoryUsedMax;

		private global::Gtk.Label lblHistoryUsedTitle;

		private global::Gtk.Table pnlHistoryStyle;

		private global::Gtk.ColorButton cmdHistoryBG;

		private global::Gtk.ColorButton cmdHistoryDarkGrid;

		private global::Gtk.ColorButton cmdHistoryLightGrid;

		private global::Gtk.ColorButton cmdHistoryText;

		private global::Gtk.Label lblHistoryBG;

		private global::Gtk.Label lblHistoryGridD;

		private global::Gtk.Label lblHistoryGridL;

		private global::Gtk.Label lblHistoryText;

		private global::Gtk.Label lblHistoryTitle;

		private global::Gtk.Frame grpMain;

		private global::Gtk.Alignment algnMain;

		private global::Gtk.Table pnlMain;

		private global::Gtk.EventBox evnMain;

		private global::Gtk.Image pctMain;

		private global::Gtk.Frame grpMainUsed;

		private global::Gtk.Alignment algnMainUsed;

		private global::Gtk.Table pnlMainUsed;

		private global::Gtk.CheckButton chkMainUsedB;

		private global::Gtk.ColorButton cmdMainUsedA;

		private global::Gtk.ColorButton cmdMainUsedB;

		private global::Gtk.ColorButton cmdMainUsedC;

		private global::Gtk.Label lblMainUsedA;

		private global::Gtk.Label lblMainUsedC;

		private global::Gtk.Label lblMainUsedTitle;

		private global::Gtk.Table pnlMainStyle;

		private global::Gtk.ColorButton cmdMainBG;

		private global::Gtk.ColorButton cmdMainText;

		private global::Gtk.Label lblMainBG;

		private global::Gtk.Label lblMainText;

		private global::Gtk.Label lblMainTitle;

		private global::Gtk.Frame grpTray;

		private global::Gtk.Alignment algnTray;

		private global::Gtk.Table pnlTray;

		private global::Gtk.EventBox evnTray;

		private global::Gtk.Image pctTray;

		private global::Gtk.Frame grpTrayUsed;

		private global::Gtk.Alignment algnTrayUsed;

		private global::Gtk.Table pnlTrayUsed;

		private global::Gtk.CheckButton chkTrayUsedB;

		private global::Gtk.ColorButton cmdTrayUsedA;

		private global::Gtk.ColorButton cmdTrayUsedB;

		private global::Gtk.ColorButton cmdTrayUsedC;

		private global::Gtk.Label lblTrayUsedA;

		private global::Gtk.Label lblTrayUsedC;

		private global::Gtk.Label lblTrayUsedTitle;

		private global::Gtk.Label lblTrayTitle;

		private global::Gtk.Button cmdSave;

		private global::Gtk.Button cmdClose;

		protected virtual void Build()
		{
			global::Stetic.Gui.Initialize(this);
			// Widget RestrictionTrackerGTK.dlgCustomColors
			this.Name = "RestrictionTrackerGTK.dlgCustomColors";
			this.Title = global::Mono.Unix.Catalog.GetString("Graph Color Customization");
			this.Icon = global::Gdk.Pixbuf.LoadFromResource("RestrictionTrackerGTK.Resources.norm.ico");
			this.TypeHint = ((global::Gdk.WindowTypeHint)(1));
			this.WindowPosition = ((global::Gtk.WindowPosition)(1));
			this.Resizable = false;
			this.AllowGrow = false;
			this.SkipPagerHint = true;
			this.SkipTaskbarHint = true;
			// Internal child RestrictionTrackerGTK.dlgCustomColors.VBox
			global::Gtk.VBox w1 = this.VBox;
			w1.Name = "pnlColors";
			w1.BorderWidth = ((uint)(2));
			// Container child pnlColors.Gtk.Box+BoxChild
			this.pnlCustomColors = new global::Gtk.Table(((uint)(1)), ((uint)(3)), false);
			this.pnlCustomColors.Name = "pnlCustomColors";
			this.pnlCustomColors.RowSpacing = ((uint)(3));
			this.pnlCustomColors.ColumnSpacing = ((uint)(3));
			// Container child pnlCustomColors.Gtk.Table+TableChild
			this.grpHistory = new global::Gtk.Frame();
			this.grpHistory.Name = "grpHistory";
			// Container child grpHistory.Gtk.Container+ContainerChild
			this.algnHistory = new global::Gtk.Alignment(0F, 0F, 1F, 1F);
			this.algnHistory.Name = "algnHistory";
			this.algnHistory.LeftPadding = ((uint)(3));
			this.algnHistory.TopPadding = ((uint)(3));
			this.algnHistory.RightPadding = ((uint)(3));
			this.algnHistory.BottomPadding = ((uint)(3));
			// Container child algnHistory.Gtk.Container+ContainerChild
			this.pnlHistory = new global::Gtk.Table(((uint)(3)), ((uint)(1)), false);
			this.pnlHistory.Name = "pnlHistory";
			this.pnlHistory.RowSpacing = ((uint)(3));
			this.pnlHistory.ColumnSpacing = ((uint)(3));
			// Container child pnlHistory.Gtk.Table+TableChild
			this.evnHistory = new global::Gtk.EventBox();
			this.evnHistory.Name = "evnHistory";
			// Container child evnHistory.Gtk.Container+ContainerChild
			this.pctHistory = new global::Gtk.Image();
			this.pctHistory.WidthRequest = 100;
			this.pctHistory.HeightRequest = 55;
			this.pctHistory.Name = "pctHistory";
			this.evnHistory.Add(this.pctHistory);
			this.pnlHistory.Add(this.evnHistory);
			global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.pnlHistory[this.evnHistory]));
			w3.XOptions = ((global::Gtk.AttachOptions)(4));
			w3.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlHistory.Gtk.Table+TableChild
			this.grpHistoryUsed = new global::Gtk.Frame();
			this.grpHistoryUsed.Name = "grpHistoryUsed";
			this.grpHistoryUsed.ShadowType = ((global::Gtk.ShadowType)(2));
			// Container child grpHistoryUsed.Gtk.Container+ContainerChild
			this.algnHistoryUsed = new global::Gtk.Alignment(0.5F, 0F, 1F, 1F);
			this.algnHistoryUsed.Name = "algnHistoryUsed";
			this.algnHistoryUsed.LeftPadding = ((uint)(3));
			this.algnHistoryUsed.TopPadding = ((uint)(3));
			this.algnHistoryUsed.RightPadding = ((uint)(3));
			this.algnHistoryUsed.BottomPadding = ((uint)(3));
			// Container child algnHistoryUsed.Gtk.Container+ContainerChild
			this.pnlHistoryUsed = new global::Gtk.Table(((uint)(3)), ((uint)(7)), false);
			this.pnlHistoryUsed.Name = "pnlHistoryUsed";
			this.pnlHistoryUsed.RowSpacing = ((uint)(3));
			this.pnlHistoryUsed.ColumnSpacing = ((uint)(3));
			// Container child pnlHistoryUsed.Gtk.Table+TableChild
			this.chkHistoryUsedB = new global::Gtk.CheckButton();
			this.chkHistoryUsedB.CanFocus = true;
			this.chkHistoryUsedB.Name = "chkHistoryUsedB";
			this.chkHistoryUsedB.Label = global::Mono.Unix.Catalog.GetString("50% :");
			this.chkHistoryUsedB.Active = true;
			this.chkHistoryUsedB.DrawIndicator = true;
			this.chkHistoryUsedB.UseUnderline = true;
			this.chkHistoryUsedB.Xalign = 1F;
			this.pnlHistoryUsed.Add(this.chkHistoryUsedB);
			global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.pnlHistoryUsed[this.chkHistoryUsedB]));
			w4.TopAttach = ((uint)(1));
			w4.BottomAttach = ((uint)(2));
			w4.LeftAttach = ((uint)(4));
			w4.RightAttach = ((uint)(5));
			w4.XOptions = ((global::Gtk.AttachOptions)(4));
			w4.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlHistoryUsed.Gtk.Table+TableChild
			this.cmdHistoryUsedA = new global::Gtk.ColorButton();
			this.cmdHistoryUsedA.CanFocus = true;
			this.cmdHistoryUsedA.Events = ((global::Gdk.EventMask)(784));
			this.cmdHistoryUsedA.Name = "cmdHistoryUsedA";
			this.cmdHistoryUsedA.Title = global::Mono.Unix.Catalog.GetString("History Graph Download 0% Color");
			this.pnlHistoryUsed.Add(this.cmdHistoryUsedA);
			global::Gtk.Table.TableChild w5 = ((global::Gtk.Table.TableChild)(this.pnlHistoryUsed[this.cmdHistoryUsedA]));
			w5.LeftAttach = ((uint)(6));
			w5.RightAttach = ((uint)(7));
			w5.XOptions = ((global::Gtk.AttachOptions)(4));
			w5.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlHistoryUsed.Gtk.Table+TableChild
			this.cmdHistoryUsedB = new global::Gtk.ColorButton();
			this.cmdHistoryUsedB.CanFocus = true;
			this.cmdHistoryUsedB.Events = ((global::Gdk.EventMask)(784));
			this.cmdHistoryUsedB.Name = "cmdHistoryUsedB";
			this.cmdHistoryUsedB.Title = global::Mono.Unix.Catalog.GetString("History Graph Download 50% Color");
			this.pnlHistoryUsed.Add(this.cmdHistoryUsedB);
			global::Gtk.Table.TableChild w6 = ((global::Gtk.Table.TableChild)(this.pnlHistoryUsed[this.cmdHistoryUsedB]));
			w6.TopAttach = ((uint)(1));
			w6.BottomAttach = ((uint)(2));
			w6.LeftAttach = ((uint)(6));
			w6.RightAttach = ((uint)(7));
			w6.XOptions = ((global::Gtk.AttachOptions)(4));
			w6.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlHistoryUsed.Gtk.Table+TableChild
			this.cmdHistoryUsedC = new global::Gtk.ColorButton();
			this.cmdHistoryUsedC.CanFocus = true;
			this.cmdHistoryUsedC.Events = ((global::Gdk.EventMask)(784));
			this.cmdHistoryUsedC.Name = "cmdHistoryUsedC";
			this.cmdHistoryUsedC.Title = global::Mono.Unix.Catalog.GetString("History Graph Download 100% Color");
			this.pnlHistoryUsed.Add(this.cmdHistoryUsedC);
			global::Gtk.Table.TableChild w7 = ((global::Gtk.Table.TableChild)(this.pnlHistoryUsed[this.cmdHistoryUsedC]));
			w7.TopAttach = ((uint)(2));
			w7.BottomAttach = ((uint)(3));
			w7.LeftAttach = ((uint)(6));
			w7.RightAttach = ((uint)(7));
			w7.XOptions = ((global::Gtk.AttachOptions)(4));
			w7.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlHistoryUsed.Gtk.Table+TableChild
			this.cmdHistoryUsedLine = new global::Gtk.ColorButton();
			this.cmdHistoryUsedLine.CanFocus = true;
			this.cmdHistoryUsedLine.Events = ((global::Gdk.EventMask)(784));
			this.cmdHistoryUsedLine.Name = "cmdHistoryUsedLine";
			this.cmdHistoryUsedLine.Title = global::Mono.Unix.Catalog.GetString("History Download Data Line");
			this.pnlHistoryUsed.Add(this.cmdHistoryUsedLine);
			global::Gtk.Table.TableChild w8 = ((global::Gtk.Table.TableChild)(this.pnlHistoryUsed[this.cmdHistoryUsedLine]));
			w8.LeftAttach = ((uint)(2));
			w8.RightAttach = ((uint)(3));
			w8.XOptions = ((global::Gtk.AttachOptions)(4));
			w8.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlHistoryUsed.Gtk.Table+TableChild
			this.cmdHistoryUsedMax = new global::Gtk.ColorButton();
			this.cmdHistoryUsedMax.CanFocus = true;
			this.cmdHistoryUsedMax.Events = ((global::Gdk.EventMask)(784));
			this.cmdHistoryUsedMax.Name = "cmdHistoryUsedMax";
			this.cmdHistoryUsedMax.Title = global::Mono.Unix.Catalog.GetString("History Graph Download Maximum Limit Color");
			this.pnlHistoryUsed.Add(this.cmdHistoryUsedMax);
			global::Gtk.Table.TableChild w9 = ((global::Gtk.Table.TableChild)(this.pnlHistoryUsed[this.cmdHistoryUsedMax]));
			w9.TopAttach = ((uint)(2));
			w9.BottomAttach = ((uint)(3));
			w9.LeftAttach = ((uint)(2));
			w9.RightAttach = ((uint)(3));
			w9.XOptions = ((global::Gtk.AttachOptions)(4));
			w9.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlHistoryUsed.Gtk.Table+TableChild
			this.lblHistoryUsedA = new global::Gtk.Label();
			this.lblHistoryUsedA.Name = "lblHistoryUsedA";
			this.lblHistoryUsedA.Xalign = 1F;
			this.lblHistoryUsedA.LabelProp = global::Mono.Unix.Catalog.GetString("0% :");
			this.pnlHistoryUsed.Add(this.lblHistoryUsedA);
			global::Gtk.Table.TableChild w10 = ((global::Gtk.Table.TableChild)(this.pnlHistoryUsed[this.lblHistoryUsedA]));
			w10.LeftAttach = ((uint)(4));
			w10.RightAttach = ((uint)(5));
			w10.XOptions = ((global::Gtk.AttachOptions)(4));
			w10.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlHistoryUsed.Gtk.Table+TableChild
			this.lblHistoryUsedC = new global::Gtk.Label();
			this.lblHistoryUsedC.Name = "lblHistoryUsedC";
			this.lblHistoryUsedC.Xalign = 1F;
			this.lblHistoryUsedC.LabelProp = global::Mono.Unix.Catalog.GetString("100% :");
			this.pnlHistoryUsed.Add(this.lblHistoryUsedC);
			global::Gtk.Table.TableChild w11 = ((global::Gtk.Table.TableChild)(this.pnlHistoryUsed[this.lblHistoryUsedC]));
			w11.TopAttach = ((uint)(2));
			w11.BottomAttach = ((uint)(3));
			w11.LeftAttach = ((uint)(4));
			w11.RightAttach = ((uint)(5));
			w11.XOptions = ((global::Gtk.AttachOptions)(4));
			w11.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlHistoryUsed.Gtk.Table+TableChild
			this.lblHistoryUsedLine = new global::Gtk.Label();
			this.lblHistoryUsedLine.Name = "lblHistoryUsedLine";
			this.lblHistoryUsedLine.Xalign = 1F;
			this.lblHistoryUsedLine.LabelProp = global::Mono.Unix.Catalog.GetString("Line :");
			this.pnlHistoryUsed.Add(this.lblHistoryUsedLine);
			global::Gtk.Table.TableChild w12 = ((global::Gtk.Table.TableChild)(this.pnlHistoryUsed[this.lblHistoryUsedLine]));
			w12.XOptions = ((global::Gtk.AttachOptions)(4));
			w12.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlHistoryUsed.Gtk.Table+TableChild
			this.lblHistoryUsedMax = new global::Gtk.Label();
			this.lblHistoryUsedMax.Name = "lblHistoryUsedMax";
			this.lblHistoryUsedMax.Xalign = 1F;
			this.lblHistoryUsedMax.LabelProp = global::Mono.Unix.Catalog.GetString("Max :");
			this.pnlHistoryUsed.Add(this.lblHistoryUsedMax);
			global::Gtk.Table.TableChild w13 = ((global::Gtk.Table.TableChild)(this.pnlHistoryUsed[this.lblHistoryUsedMax]));
			w13.TopAttach = ((uint)(2));
			w13.BottomAttach = ((uint)(3));
			w13.XOptions = ((global::Gtk.AttachOptions)(4));
			w13.YOptions = ((global::Gtk.AttachOptions)(4));
			this.algnHistoryUsed.Add(this.pnlHistoryUsed);
			this.grpHistoryUsed.Add(this.algnHistoryUsed);
			this.lblHistoryUsedTitle = new global::Gtk.Label();
			this.lblHistoryUsedTitle.Name = "lblHistoryUsedTitle";
			this.lblHistoryUsedTitle.Xalign = 0F;
			this.lblHistoryUsedTitle.LabelProp = global::Mono.Unix.Catalog.GetString("History Colors and Gradient");
			this.lblHistoryUsedTitle.UseMarkup = true;
			this.grpHistoryUsed.LabelWidget = this.lblHistoryUsedTitle;
			this.pnlHistory.Add(this.grpHistoryUsed);
			global::Gtk.Table.TableChild w16 = ((global::Gtk.Table.TableChild)(this.pnlHistory[this.grpHistoryUsed]));
			w16.TopAttach = ((uint)(1));
			w16.BottomAttach = ((uint)(2));
			w16.XOptions = ((global::Gtk.AttachOptions)(1));
			w16.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlHistory.Gtk.Table+TableChild
			this.pnlHistoryStyle = new global::Gtk.Table(((uint)(2)), ((uint)(5)), false);
			this.pnlHistoryStyle.Name = "pnlHistoryStyle";
			this.pnlHistoryStyle.RowSpacing = ((uint)(3));
			this.pnlHistoryStyle.ColumnSpacing = ((uint)(3));
			// Container child pnlHistoryStyle.Gtk.Table+TableChild
			this.cmdHistoryBG = new global::Gtk.ColorButton();
			this.cmdHistoryBG.CanFocus = true;
			this.cmdHistoryBG.Events = ((global::Gdk.EventMask)(784));
			this.cmdHistoryBG.Name = "cmdHistoryBG";
			this.pnlHistoryStyle.Add(this.cmdHistoryBG);
			global::Gtk.Table.TableChild w17 = ((global::Gtk.Table.TableChild)(this.pnlHistoryStyle[this.cmdHistoryBG]));
			w17.TopAttach = ((uint)(1));
			w17.BottomAttach = ((uint)(2));
			w17.LeftAttach = ((uint)(1));
			w17.RightAttach = ((uint)(2));
			w17.XOptions = ((global::Gtk.AttachOptions)(4));
			w17.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlHistoryStyle.Gtk.Table+TableChild
			this.cmdHistoryDarkGrid = new global::Gtk.ColorButton();
			this.cmdHistoryDarkGrid.CanFocus = true;
			this.cmdHistoryDarkGrid.Events = ((global::Gdk.EventMask)(784));
			this.cmdHistoryDarkGrid.Name = "cmdHistoryDarkGrid";
			this.cmdHistoryDarkGrid.Title = global::Mono.Unix.Catalog.GetString("History Grid Lines Dark Color");
			this.pnlHistoryStyle.Add(this.cmdHistoryDarkGrid);
			global::Gtk.Table.TableChild w18 = ((global::Gtk.Table.TableChild)(this.pnlHistoryStyle[this.cmdHistoryDarkGrid]));
			w18.TopAttach = ((uint)(1));
			w18.BottomAttach = ((uint)(2));
			w18.LeftAttach = ((uint)(4));
			w18.RightAttach = ((uint)(5));
			w18.XOptions = ((global::Gtk.AttachOptions)(4));
			w18.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlHistoryStyle.Gtk.Table+TableChild
			this.cmdHistoryLightGrid = new global::Gtk.ColorButton();
			this.cmdHistoryLightGrid.CanFocus = true;
			this.cmdHistoryLightGrid.Events = ((global::Gdk.EventMask)(784));
			this.cmdHistoryLightGrid.Name = "cmdHistoryLightGrid";
			this.cmdHistoryLightGrid.Title = global::Mono.Unix.Catalog.GetString("History Grid Lines Light Color");
			this.pnlHistoryStyle.Add(this.cmdHistoryLightGrid);
			global::Gtk.Table.TableChild w19 = ((global::Gtk.Table.TableChild)(this.pnlHistoryStyle[this.cmdHistoryLightGrid]));
			w19.LeftAttach = ((uint)(4));
			w19.RightAttach = ((uint)(5));
			w19.XOptions = ((global::Gtk.AttachOptions)(4));
			w19.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlHistoryStyle.Gtk.Table+TableChild
			this.cmdHistoryText = new global::Gtk.ColorButton();
			this.cmdHistoryText.CanFocus = true;
			this.cmdHistoryText.Events = ((global::Gdk.EventMask)(784));
			this.cmdHistoryText.Name = "cmdHistoryText";
			this.cmdHistoryText.Title = global::Mono.Unix.Catalog.GetString("History Graph Upload Text Color");
			this.pnlHistoryStyle.Add(this.cmdHistoryText);
			global::Gtk.Table.TableChild w20 = ((global::Gtk.Table.TableChild)(this.pnlHistoryStyle[this.cmdHistoryText]));
			w20.LeftAttach = ((uint)(1));
			w20.RightAttach = ((uint)(2));
			w20.XOptions = ((global::Gtk.AttachOptions)(4));
			w20.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlHistoryStyle.Gtk.Table+TableChild
			this.lblHistoryBG = new global::Gtk.Label();
			this.lblHistoryBG.Name = "lblHistoryBG";
			this.lblHistoryBG.Xalign = 1F;
			this.lblHistoryBG.LabelProp = global::Mono.Unix.Catalog.GetString("Background :");
			this.pnlHistoryStyle.Add(this.lblHistoryBG);
			global::Gtk.Table.TableChild w21 = ((global::Gtk.Table.TableChild)(this.pnlHistoryStyle[this.lblHistoryBG]));
			w21.TopAttach = ((uint)(1));
			w21.BottomAttach = ((uint)(2));
			w21.XOptions = ((global::Gtk.AttachOptions)(4));
			w21.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlHistoryStyle.Gtk.Table+TableChild
			this.lblHistoryGridD = new global::Gtk.Label();
			this.lblHistoryGridD.Name = "lblHistoryGridD";
			this.lblHistoryGridD.Xalign = 1F;
			this.lblHistoryGridD.LabelProp = global::Mono.Unix.Catalog.GetString("Dark Grid :");
			this.pnlHistoryStyle.Add(this.lblHistoryGridD);
			global::Gtk.Table.TableChild w22 = ((global::Gtk.Table.TableChild)(this.pnlHistoryStyle[this.lblHistoryGridD]));
			w22.TopAttach = ((uint)(1));
			w22.BottomAttach = ((uint)(2));
			w22.LeftAttach = ((uint)(3));
			w22.RightAttach = ((uint)(4));
			w22.XOptions = ((global::Gtk.AttachOptions)(4));
			w22.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlHistoryStyle.Gtk.Table+TableChild
			this.lblHistoryGridL = new global::Gtk.Label();
			this.lblHistoryGridL.Name = "lblHistoryGridL";
			this.lblHistoryGridL.Xalign = 1F;
			this.lblHistoryGridL.LabelProp = global::Mono.Unix.Catalog.GetString("Light Grid :");
			this.pnlHistoryStyle.Add(this.lblHistoryGridL);
			global::Gtk.Table.TableChild w23 = ((global::Gtk.Table.TableChild)(this.pnlHistoryStyle[this.lblHistoryGridL]));
			w23.LeftAttach = ((uint)(3));
			w23.RightAttach = ((uint)(4));
			w23.XOptions = ((global::Gtk.AttachOptions)(4));
			w23.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlHistoryStyle.Gtk.Table+TableChild
			this.lblHistoryText = new global::Gtk.Label();
			this.lblHistoryText.Name = "lblHistoryText";
			this.lblHistoryText.Xalign = 1F;
			this.lblHistoryText.LabelProp = global::Mono.Unix.Catalog.GetString("Text Color :");
			this.pnlHistoryStyle.Add(this.lblHistoryText);
			global::Gtk.Table.TableChild w24 = ((global::Gtk.Table.TableChild)(this.pnlHistoryStyle[this.lblHistoryText]));
			w24.XOptions = ((global::Gtk.AttachOptions)(4));
			w24.YOptions = ((global::Gtk.AttachOptions)(4));
			this.pnlHistory.Add(this.pnlHistoryStyle);
			global::Gtk.Table.TableChild w25 = ((global::Gtk.Table.TableChild)(this.pnlHistory[this.pnlHistoryStyle]));
			w25.TopAttach = ((uint)(2));
			w25.BottomAttach = ((uint)(3));
			w25.YOptions = ((global::Gtk.AttachOptions)(4));
			this.algnHistory.Add(this.pnlHistory);
			this.grpHistory.Add(this.algnHistory);
			this.lblHistoryTitle = new global::Gtk.Label();
			this.lblHistoryTitle.Name = "lblHistoryTitle";
			this.lblHistoryTitle.Xalign = 0F;
			this.lblHistoryTitle.LabelProp = global::Mono.Unix.Catalog.GetString("History Window Graph");
			this.lblHistoryTitle.UseMarkup = true;
			this.grpHistory.LabelWidget = this.lblHistoryTitle;
			this.pnlCustomColors.Add(this.grpHistory);
			global::Gtk.Table.TableChild w28 = ((global::Gtk.Table.TableChild)(this.pnlCustomColors[this.grpHistory]));
			w28.LeftAttach = ((uint)(2));
			w28.RightAttach = ((uint)(3));
			w28.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlCustomColors.Gtk.Table+TableChild
			this.grpMain = new global::Gtk.Frame();
			this.grpMain.Name = "grpMain";
			// Container child grpMain.Gtk.Container+ContainerChild
			this.algnMain = new global::Gtk.Alignment(0F, 0F, 1F, 1F);
			this.algnMain.Name = "algnMain";
			this.algnMain.LeftPadding = ((uint)(3));
			this.algnMain.TopPadding = ((uint)(3));
			this.algnMain.RightPadding = ((uint)(3));
			this.algnMain.BottomPadding = ((uint)(3));
			// Container child algnMain.Gtk.Container+ContainerChild
			this.pnlMain = new global::Gtk.Table(((uint)(3)), ((uint)(1)), false);
			this.pnlMain.Name = "pnlMain";
			this.pnlMain.RowSpacing = ((uint)(3));
			this.pnlMain.ColumnSpacing = ((uint)(3));
			// Container child pnlMain.Gtk.Table+TableChild
			this.evnMain = new global::Gtk.EventBox();
			this.evnMain.Name = "evnMain";
			// Container child evnMain.Gtk.Container+ContainerChild
			this.pctMain = new global::Gtk.Image();
			this.pctMain.WidthRequest = 100;
			this.pctMain.HeightRequest = 55;
			this.pctMain.Name = "pctMain";
			this.evnMain.Add(this.pctMain);
			this.pnlMain.Add(this.evnMain);
			global::Gtk.Table.TableChild w30 = ((global::Gtk.Table.TableChild)(this.pnlMain[this.evnMain]));
			w30.XOptions = ((global::Gtk.AttachOptions)(4));
			w30.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlMain.Gtk.Table+TableChild
			this.grpMainUsed = new global::Gtk.Frame();
			this.grpMainUsed.Name = "grpMainUsed";
			this.grpMainUsed.ShadowType = ((global::Gtk.ShadowType)(2));
			// Container child grpMainUsed.Gtk.Container+ContainerChild
			this.algnMainUsed = new global::Gtk.Alignment(0F, 0F, 1F, 1F);
			this.algnMainUsed.Name = "algnMainUsed";
			this.algnMainUsed.LeftPadding = ((uint)(3));
			this.algnMainUsed.TopPadding = ((uint)(3));
			this.algnMainUsed.RightPadding = ((uint)(3));
			this.algnMainUsed.BottomPadding = ((uint)(3));
			// Container child algnMainUsed.Gtk.Container+ContainerChild
			this.pnlMainUsed = new global::Gtk.Table(((uint)(3)), ((uint)(3)), false);
			this.pnlMainUsed.Name = "pnlMainUsed";
			this.pnlMainUsed.RowSpacing = ((uint)(3));
			this.pnlMainUsed.ColumnSpacing = ((uint)(3));
			// Container child pnlMainUsed.Gtk.Table+TableChild
			this.chkMainUsedB = new global::Gtk.CheckButton();
			this.chkMainUsedB.CanFocus = true;
			this.chkMainUsedB.Name = "chkMainUsedB";
			this.chkMainUsedB.Label = global::Mono.Unix.Catalog.GetString("50% :");
			this.chkMainUsedB.Active = true;
			this.chkMainUsedB.DrawIndicator = true;
			this.chkMainUsedB.UseUnderline = true;
			this.chkMainUsedB.Xalign = 1F;
			this.pnlMainUsed.Add(this.chkMainUsedB);
			global::Gtk.Table.TableChild w31 = ((global::Gtk.Table.TableChild)(this.pnlMainUsed[this.chkMainUsedB]));
			w31.TopAttach = ((uint)(1));
			w31.BottomAttach = ((uint)(2));
			w31.XOptions = ((global::Gtk.AttachOptions)(4));
			w31.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlMainUsed.Gtk.Table+TableChild
			this.cmdMainUsedA = new global::Gtk.ColorButton();
			this.cmdMainUsedA.CanFocus = true;
			this.cmdMainUsedA.Events = ((global::Gdk.EventMask)(784));
			this.cmdMainUsedA.Name = "cmdMainUsedA";
			this.cmdMainUsedA.Title = global::Mono.Unix.Catalog.GetString("Main Graph Download 0% Color");
			this.pnlMainUsed.Add(this.cmdMainUsedA);
			global::Gtk.Table.TableChild w32 = ((global::Gtk.Table.TableChild)(this.pnlMainUsed[this.cmdMainUsedA]));
			w32.LeftAttach = ((uint)(2));
			w32.RightAttach = ((uint)(3));
			w32.XOptions = ((global::Gtk.AttachOptions)(4));
			w32.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlMainUsed.Gtk.Table+TableChild
			this.cmdMainUsedB = new global::Gtk.ColorButton();
			this.cmdMainUsedB.CanFocus = true;
			this.cmdMainUsedB.Events = ((global::Gdk.EventMask)(784));
			this.cmdMainUsedB.Name = "cmdMainUsedB";
			this.cmdMainUsedB.Title = global::Mono.Unix.Catalog.GetString("Main Graph Download 50% Color");
			this.pnlMainUsed.Add(this.cmdMainUsedB);
			global::Gtk.Table.TableChild w33 = ((global::Gtk.Table.TableChild)(this.pnlMainUsed[this.cmdMainUsedB]));
			w33.TopAttach = ((uint)(1));
			w33.BottomAttach = ((uint)(2));
			w33.LeftAttach = ((uint)(2));
			w33.RightAttach = ((uint)(3));
			w33.XOptions = ((global::Gtk.AttachOptions)(4));
			w33.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlMainUsed.Gtk.Table+TableChild
			this.cmdMainUsedC = new global::Gtk.ColorButton();
			this.cmdMainUsedC.CanFocus = true;
			this.cmdMainUsedC.Events = ((global::Gdk.EventMask)(784));
			this.cmdMainUsedC.Name = "cmdMainUsedC";
			this.cmdMainUsedC.Title = global::Mono.Unix.Catalog.GetString("Main Graph Download 100% Color");
			this.pnlMainUsed.Add(this.cmdMainUsedC);
			global::Gtk.Table.TableChild w34 = ((global::Gtk.Table.TableChild)(this.pnlMainUsed[this.cmdMainUsedC]));
			w34.TopAttach = ((uint)(2));
			w34.BottomAttach = ((uint)(3));
			w34.LeftAttach = ((uint)(2));
			w34.RightAttach = ((uint)(3));
			w34.XOptions = ((global::Gtk.AttachOptions)(4));
			w34.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlMainUsed.Gtk.Table+TableChild
			this.lblMainUsedA = new global::Gtk.Label();
			this.lblMainUsedA.Name = "lblMainUsedA";
			this.lblMainUsedA.Xalign = 1F;
			this.lblMainUsedA.LabelProp = global::Mono.Unix.Catalog.GetString("0% :");
			this.pnlMainUsed.Add(this.lblMainUsedA);
			global::Gtk.Table.TableChild w35 = ((global::Gtk.Table.TableChild)(this.pnlMainUsed[this.lblMainUsedA]));
			w35.XOptions = ((global::Gtk.AttachOptions)(4));
			w35.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlMainUsed.Gtk.Table+TableChild
			this.lblMainUsedC = new global::Gtk.Label();
			this.lblMainUsedC.Name = "lblMainUsedC";
			this.lblMainUsedC.Xalign = 1F;
			this.lblMainUsedC.LabelProp = global::Mono.Unix.Catalog.GetString("100% :");
			this.pnlMainUsed.Add(this.lblMainUsedC);
			global::Gtk.Table.TableChild w36 = ((global::Gtk.Table.TableChild)(this.pnlMainUsed[this.lblMainUsedC]));
			w36.TopAttach = ((uint)(2));
			w36.BottomAttach = ((uint)(3));
			w36.XOptions = ((global::Gtk.AttachOptions)(4));
			w36.YOptions = ((global::Gtk.AttachOptions)(4));
			this.algnMainUsed.Add(this.pnlMainUsed);
			this.grpMainUsed.Add(this.algnMainUsed);
			this.lblMainUsedTitle = new global::Gtk.Label();
			this.lblMainUsedTitle.Name = "lblMainUsedTitle";
			this.lblMainUsedTitle.Xalign = 0F;
			this.lblMainUsedTitle.LabelProp = global::Mono.Unix.Catalog.GetString("Usage Gradient");
			this.lblMainUsedTitle.UseMarkup = true;
			this.grpMainUsed.LabelWidget = this.lblMainUsedTitle;
			this.pnlMain.Add(this.grpMainUsed);
			global::Gtk.Table.TableChild w39 = ((global::Gtk.Table.TableChild)(this.pnlMain[this.grpMainUsed]));
			w39.TopAttach = ((uint)(1));
			w39.BottomAttach = ((uint)(2));
			w39.XOptions = ((global::Gtk.AttachOptions)(1));
			w39.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlMain.Gtk.Table+TableChild
			this.pnlMainStyle = new global::Gtk.Table(((uint)(2)), ((uint)(2)), false);
			this.pnlMainStyle.Name = "pnlMainStyle";
			this.pnlMainStyle.RowSpacing = ((uint)(3));
			this.pnlMainStyle.ColumnSpacing = ((uint)(3));
			// Container child pnlMainStyle.Gtk.Table+TableChild
			this.cmdMainBG = new global::Gtk.ColorButton();
			this.cmdMainBG.CanFocus = true;
			this.cmdMainBG.Events = ((global::Gdk.EventMask)(784));
			this.cmdMainBG.Name = "cmdMainBG";
			this.cmdMainBG.Title = global::Mono.Unix.Catalog.GetString("Main Graph Background Color");
			this.pnlMainStyle.Add(this.cmdMainBG);
			global::Gtk.Table.TableChild w40 = ((global::Gtk.Table.TableChild)(this.pnlMainStyle[this.cmdMainBG]));
			w40.TopAttach = ((uint)(1));
			w40.BottomAttach = ((uint)(2));
			w40.LeftAttach = ((uint)(1));
			w40.RightAttach = ((uint)(2));
			w40.XOptions = ((global::Gtk.AttachOptions)(4));
			w40.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlMainStyle.Gtk.Table+TableChild
			this.cmdMainText = new global::Gtk.ColorButton();
			this.cmdMainText.CanFocus = true;
			this.cmdMainText.Events = ((global::Gdk.EventMask)(784));
			this.cmdMainText.Name = "cmdMainText";
			this.cmdMainText.Title = global::Mono.Unix.Catalog.GetString("Main Graph Text Color");
			this.pnlMainStyle.Add(this.cmdMainText);
			global::Gtk.Table.TableChild w41 = ((global::Gtk.Table.TableChild)(this.pnlMainStyle[this.cmdMainText]));
			w41.LeftAttach = ((uint)(1));
			w41.RightAttach = ((uint)(2));
			w41.XOptions = ((global::Gtk.AttachOptions)(4));
			w41.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlMainStyle.Gtk.Table+TableChild
			this.lblMainBG = new global::Gtk.Label();
			this.lblMainBG.Name = "lblMainBG";
			this.lblMainBG.Xalign = 1F;
			this.lblMainBG.LabelProp = global::Mono.Unix.Catalog.GetString("Background :");
			this.pnlMainStyle.Add(this.lblMainBG);
			global::Gtk.Table.TableChild w42 = ((global::Gtk.Table.TableChild)(this.pnlMainStyle[this.lblMainBG]));
			w42.TopAttach = ((uint)(1));
			w42.BottomAttach = ((uint)(2));
			w42.XOptions = ((global::Gtk.AttachOptions)(4));
			w42.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlMainStyle.Gtk.Table+TableChild
			this.lblMainText = new global::Gtk.Label();
			this.lblMainText.Name = "lblMainText";
			this.lblMainText.Xalign = 1F;
			this.lblMainText.LabelProp = global::Mono.Unix.Catalog.GetString("Text Color :");
			this.pnlMainStyle.Add(this.lblMainText);
			global::Gtk.Table.TableChild w43 = ((global::Gtk.Table.TableChild)(this.pnlMainStyle[this.lblMainText]));
			w43.XOptions = ((global::Gtk.AttachOptions)(4));
			w43.YOptions = ((global::Gtk.AttachOptions)(4));
			this.pnlMain.Add(this.pnlMainStyle);
			global::Gtk.Table.TableChild w44 = ((global::Gtk.Table.TableChild)(this.pnlMain[this.pnlMainStyle]));
			w44.TopAttach = ((uint)(2));
			w44.BottomAttach = ((uint)(3));
			w44.YOptions = ((global::Gtk.AttachOptions)(4));
			this.algnMain.Add(this.pnlMain);
			this.grpMain.Add(this.algnMain);
			this.lblMainTitle = new global::Gtk.Label();
			this.lblMainTitle.Name = "lblMainTitle";
			this.lblMainTitle.Xalign = 0F;
			this.lblMainTitle.LabelProp = global::Mono.Unix.Catalog.GetString("Main Window Graph");
			this.lblMainTitle.UseMarkup = true;
			this.grpMain.LabelWidget = this.lblMainTitle;
			this.pnlCustomColors.Add(this.grpMain);
			global::Gtk.Table.TableChild w47 = ((global::Gtk.Table.TableChild)(this.pnlCustomColors[this.grpMain]));
			w47.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlCustomColors.Gtk.Table+TableChild
			this.grpTray = new global::Gtk.Frame();
			this.grpTray.Name = "grpTray";
			// Container child grpTray.Gtk.Container+ContainerChild
			this.algnTray = new global::Gtk.Alignment(0F, 0F, 1F, 1F);
			this.algnTray.Name = "algnTray";
			this.algnTray.LeftPadding = ((uint)(3));
			this.algnTray.TopPadding = ((uint)(3));
			this.algnTray.RightPadding = ((uint)(3));
			this.algnTray.BottomPadding = ((uint)(3));
			// Container child algnTray.Gtk.Container+ContainerChild
			this.pnlTray = new global::Gtk.Table(((uint)(2)), ((uint)(1)), false);
			this.pnlTray.Name = "pnlTray";
			this.pnlTray.RowSpacing = ((uint)(3));
			this.pnlTray.ColumnSpacing = ((uint)(3));
			// Container child pnlTray.Gtk.Table+TableChild
			this.evnTray = new global::Gtk.EventBox();
			this.evnTray.Name = "evnTray";
			// Container child evnTray.Gtk.Container+ContainerChild
			this.pctTray = new global::Gtk.Image();
			this.pctTray.WidthRequest = 100;
			this.pctTray.HeightRequest = 55;
			this.pctTray.Name = "pctTray";
			this.evnTray.Add(this.pctTray);
			this.pnlTray.Add(this.evnTray);
			global::Gtk.Table.TableChild w49 = ((global::Gtk.Table.TableChild)(this.pnlTray[this.evnTray]));
			w49.XOptions = ((global::Gtk.AttachOptions)(4));
			w49.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlTray.Gtk.Table+TableChild
			this.grpTrayUsed = new global::Gtk.Frame();
			this.grpTrayUsed.Name = "grpTrayUsed";
			this.grpTrayUsed.ShadowType = ((global::Gtk.ShadowType)(2));
			// Container child grpTrayUsed.Gtk.Container+ContainerChild
			this.algnTrayUsed = new global::Gtk.Alignment(0F, 0F, 1F, 1F);
			this.algnTrayUsed.Name = "algnTrayUsed";
			this.algnTrayUsed.LeftPadding = ((uint)(3));
			this.algnTrayUsed.TopPadding = ((uint)(3));
			this.algnTrayUsed.RightPadding = ((uint)(3));
			this.algnTrayUsed.BottomPadding = ((uint)(3));
			// Container child algnTrayUsed.Gtk.Container+ContainerChild
			this.pnlTrayUsed = new global::Gtk.Table(((uint)(3)), ((uint)(3)), false);
			this.pnlTrayUsed.Name = "pnlTrayUsed";
			this.pnlTrayUsed.RowSpacing = ((uint)(3));
			this.pnlTrayUsed.ColumnSpacing = ((uint)(3));
			// Container child pnlTrayUsed.Gtk.Table+TableChild
			this.chkTrayUsedB = new global::Gtk.CheckButton();
			this.chkTrayUsedB.CanFocus = true;
			this.chkTrayUsedB.Name = "chkTrayUsedB";
			this.chkTrayUsedB.Label = global::Mono.Unix.Catalog.GetString("50% :");
			this.chkTrayUsedB.Active = true;
			this.chkTrayUsedB.DrawIndicator = true;
			this.chkTrayUsedB.UseUnderline = true;
			this.chkTrayUsedB.Xalign = 1F;
			this.pnlTrayUsed.Add(this.chkTrayUsedB);
			global::Gtk.Table.TableChild w50 = ((global::Gtk.Table.TableChild)(this.pnlTrayUsed[this.chkTrayUsedB]));
			w50.TopAttach = ((uint)(1));
			w50.BottomAttach = ((uint)(2));
			w50.XOptions = ((global::Gtk.AttachOptions)(4));
			w50.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlTrayUsed.Gtk.Table+TableChild
			this.cmdTrayUsedA = new global::Gtk.ColorButton();
			this.cmdTrayUsedA.CanFocus = true;
			this.cmdTrayUsedA.Events = ((global::Gdk.EventMask)(784));
			this.cmdTrayUsedA.Name = "cmdTrayUsedA";
			this.cmdTrayUsedA.Title = global::Mono.Unix.Catalog.GetString("Tray Graph Download 0% Color");
			this.pnlTrayUsed.Add(this.cmdTrayUsedA);
			global::Gtk.Table.TableChild w51 = ((global::Gtk.Table.TableChild)(this.pnlTrayUsed[this.cmdTrayUsedA]));
			w51.LeftAttach = ((uint)(2));
			w51.RightAttach = ((uint)(3));
			w51.XOptions = ((global::Gtk.AttachOptions)(4));
			w51.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlTrayUsed.Gtk.Table+TableChild
			this.cmdTrayUsedB = new global::Gtk.ColorButton();
			this.cmdTrayUsedB.CanFocus = true;
			this.cmdTrayUsedB.Events = ((global::Gdk.EventMask)(784));
			this.cmdTrayUsedB.Name = "cmdTrayUsedB";
			this.cmdTrayUsedB.Title = global::Mono.Unix.Catalog.GetString("Tray Graph Download 50% Color");
			this.pnlTrayUsed.Add(this.cmdTrayUsedB);
			global::Gtk.Table.TableChild w52 = ((global::Gtk.Table.TableChild)(this.pnlTrayUsed[this.cmdTrayUsedB]));
			w52.TopAttach = ((uint)(1));
			w52.BottomAttach = ((uint)(2));
			w52.LeftAttach = ((uint)(2));
			w52.RightAttach = ((uint)(3));
			w52.XOptions = ((global::Gtk.AttachOptions)(4));
			w52.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlTrayUsed.Gtk.Table+TableChild
			this.cmdTrayUsedC = new global::Gtk.ColorButton();
			this.cmdTrayUsedC.CanFocus = true;
			this.cmdTrayUsedC.Events = ((global::Gdk.EventMask)(784));
			this.cmdTrayUsedC.Name = "cmdTrayUsedC";
			this.cmdTrayUsedC.Title = global::Mono.Unix.Catalog.GetString("Tray Graph Download 100% Color");
			this.pnlTrayUsed.Add(this.cmdTrayUsedC);
			global::Gtk.Table.TableChild w53 = ((global::Gtk.Table.TableChild)(this.pnlTrayUsed[this.cmdTrayUsedC]));
			w53.TopAttach = ((uint)(2));
			w53.BottomAttach = ((uint)(3));
			w53.LeftAttach = ((uint)(2));
			w53.RightAttach = ((uint)(3));
			w53.XOptions = ((global::Gtk.AttachOptions)(4));
			w53.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlTrayUsed.Gtk.Table+TableChild
			this.lblTrayUsedA = new global::Gtk.Label();
			this.lblTrayUsedA.Name = "lblTrayUsedA";
			this.lblTrayUsedA.Xalign = 1F;
			this.lblTrayUsedA.LabelProp = global::Mono.Unix.Catalog.GetString("0% :");
			this.pnlTrayUsed.Add(this.lblTrayUsedA);
			global::Gtk.Table.TableChild w54 = ((global::Gtk.Table.TableChild)(this.pnlTrayUsed[this.lblTrayUsedA]));
			w54.XOptions = ((global::Gtk.AttachOptions)(4));
			w54.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child pnlTrayUsed.Gtk.Table+TableChild
			this.lblTrayUsedC = new global::Gtk.Label();
			this.lblTrayUsedC.Name = "lblTrayUsedC";
			this.lblTrayUsedC.Xalign = 1F;
			this.lblTrayUsedC.LabelProp = global::Mono.Unix.Catalog.GetString("100% :");
			this.pnlTrayUsed.Add(this.lblTrayUsedC);
			global::Gtk.Table.TableChild w55 = ((global::Gtk.Table.TableChild)(this.pnlTrayUsed[this.lblTrayUsedC]));
			w55.TopAttach = ((uint)(2));
			w55.BottomAttach = ((uint)(3));
			w55.XOptions = ((global::Gtk.AttachOptions)(4));
			w55.YOptions = ((global::Gtk.AttachOptions)(4));
			this.algnTrayUsed.Add(this.pnlTrayUsed);
			this.grpTrayUsed.Add(this.algnTrayUsed);
			this.lblTrayUsedTitle = new global::Gtk.Label();
			this.lblTrayUsedTitle.Name = "lblTrayUsedTitle";
			this.lblTrayUsedTitle.Xalign = 0F;
			this.lblTrayUsedTitle.LabelProp = global::Mono.Unix.Catalog.GetString("Icon Gradient");
			this.lblTrayUsedTitle.UseMarkup = true;
			this.grpTrayUsed.LabelWidget = this.lblTrayUsedTitle;
			this.pnlTray.Add(this.grpTrayUsed);
			global::Gtk.Table.TableChild w58 = ((global::Gtk.Table.TableChild)(this.pnlTray[this.grpTrayUsed]));
			w58.TopAttach = ((uint)(1));
			w58.BottomAttach = ((uint)(2));
			w58.XOptions = ((global::Gtk.AttachOptions)(1));
			w58.YOptions = ((global::Gtk.AttachOptions)(4));
			this.algnTray.Add(this.pnlTray);
			this.grpTray.Add(this.algnTray);
			this.lblTrayTitle = new global::Gtk.Label();
			this.lblTrayTitle.Name = "lblTrayTitle";
			this.lblTrayTitle.Xalign = 0F;
			this.lblTrayTitle.LabelProp = global::Mono.Unix.Catalog.GetString("Tray Icon Graph");
			this.lblTrayTitle.UseMarkup = true;
			this.grpTray.LabelWidget = this.lblTrayTitle;
			this.pnlCustomColors.Add(this.grpTray);
			global::Gtk.Table.TableChild w61 = ((global::Gtk.Table.TableChild)(this.pnlCustomColors[this.grpTray]));
			w61.LeftAttach = ((uint)(1));
			w61.RightAttach = ((uint)(2));
			w61.YOptions = ((global::Gtk.AttachOptions)(4));
			w1.Add(this.pnlCustomColors);
			global::Gtk.Box.BoxChild w62 = ((global::Gtk.Box.BoxChild)(w1[this.pnlCustomColors]));
			w62.Position = 0;
			w62.Expand = false;
			w62.Fill = false;
			// Internal child RestrictionTrackerGTK.dlgCustomColors.ActionArea
			global::Gtk.HButtonBox w63 = this.ActionArea;
			w63.Name = "pnlColorButtons";
			w63.Spacing = 10;
			w63.BorderWidth = ((uint)(3));
			w63.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(4));
			// Container child pnlColorButtons.Gtk.ButtonBox+ButtonBoxChild
			this.cmdSave = new global::Gtk.Button();
			this.cmdSave.CanDefault = true;
			this.cmdSave.CanFocus = true;
			this.cmdSave.Name = "cmdSave";
			this.cmdSave.UseUnderline = true;
			this.cmdSave.Label = global::Mono.Unix.Catalog.GetString("_Save");
			w63.Add(this.cmdSave);
			global::Gtk.ButtonBox.ButtonBoxChild w64 = ((global::Gtk.ButtonBox.ButtonBoxChild)(w63[this.cmdSave]));
			w64.Expand = false;
			w64.Fill = false;
			// Container child pnlColorButtons.Gtk.ButtonBox+ButtonBoxChild
			this.cmdClose = new global::Gtk.Button();
			this.cmdClose.CanDefault = true;
			this.cmdClose.CanFocus = true;
			this.cmdClose.Name = "cmdClose";
			this.cmdClose.UseUnderline = true;
			this.cmdClose.Label = global::Mono.Unix.Catalog.GetString("_Close");
			w63.Add(this.cmdClose);
			global::Gtk.ButtonBox.ButtonBoxChild w65 = ((global::Gtk.ButtonBox.ButtonBoxChild)(w63[this.cmdClose]));
			w65.Position = 1;
			w65.Expand = false;
			w65.Fill = false;
			if ((this.Child != null))
			{
				this.Child.ShowAll();
			}
			this.DefaultWidth = 729;
			this.DefaultHeight = 327;
			this.Hide();
			this.evnTray.ButtonReleaseEvent += new global::Gtk.ButtonReleaseEventHandler(this.pctTray_MouseUp);
			this.evnMain.ButtonReleaseEvent += new global::Gtk.ButtonReleaseEventHandler(this.pctMain_MouseUp);
			this.cmdSave.Clicked += new global::System.EventHandler(this.cmdSave_Click);
			this.cmdClose.Clicked += new global::System.EventHandler(this.cmdClose_Click);
		}
	}
}
